[
  {
    "bookSourceComment": "2025/7/14：\n更新修复已知bug/问题/特性，新增未知bug/问题/特性 \n修复by清词：番茄书架  \n天天的鸟蛋蛋：强制兼容阅读发送邮箱特性\n2025/7/12\nby天天的鸟蛋蛋\n使用说明\n正文请求限制，预下载调到0-3之间[白名单密匙不受请求限制]\n如果每秒访问超过10次，会被限制30秒\n默认搜索小说\n模式会自动切换对应的源类型\n关键词@来源 搜索指定来源\n关键词@类型 搜索指定类型\n关键词@来源,类型 搜索指定来源和类型\n也可以到登录切换\n强制听书是给没有听书的源准备的 如果使用番茄不建议开启 请使用对应番茄音色\n自定义音色添加\n默认音色为通用音色\n微软音色需开启强制听书 （如：云希，晓晓等。。。）：config.setVoice('zh-CN-XiaoxiaoNeural')\n番茄音色 只支持是番茄来源。（如：成熟大叔，甜美少女等。。。）：config.setVoice(2)",
    "bookSourceName": "蛋蛋聚合",
    "bookSourceType": 0,
    "bookSourceUrl": "蛋蛋聚合",
    "customOrder": 25,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\n个人中心 = 1;\nobj = (title, url, type) => ({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n})\n\nlet sort = [];\npush = (title, url, type) => sort.push({\n    title: title,\n    url: url,\n    style: {\n        layout_flexBasisPercent: type\n    }\n});\n    push('个性推荐', 'https://api5-normal-lf.fqnovel.com/reading/bookapi/bookmall/cell/change/v1/?aid=1967&change_type=1&iid=1&app_name=novelapp&version_code=999&cell_id=7012498777642631182&algo_type=101&category_id=0', 0.29);\t\n    push('巅峰榜单', 'https://fanqienovel.com/api/author/misc/top_book_list/v1/?limit=100&offset={{page}}', 0.29);\n    push('出版榜单', 'https://fanqienovel.com/api/node/publication/list?page_index={{page}}&page_count=100', 0.29);\n    push('爆更榜单', 'https://api-lf.fanqiesdk.com/api/novel/channel/homepage/rank/rank_list/v2/?aid=13&limit=50&offset={{page}}&side_type=15&type=1', 0.29);\n    push('黑马榜单', 'https://api-lf.fanqiesdk.com/api/novel/channel/homepage/rank/rank_list/v2/?aid=13&limit=50&offset={{page}}&side_type=13&type=1', 0.29);\n    push('热搜榜单', 'https://api-lf.fanqiesdk.com/api/novel/channel/homepage/rank/rank_list/v2/?aid=13&limit=50&offset={{page}}&side_type=12&type=1', 0.29);\t\n\t\n\tA=[[\"推荐\",\"10\"],[\"完结\",\"11\"],[\"热搜\",\"12\"]]\t;\n[[\"男频\",\"1\"],[\"女频\",\"0\"]].map(([title,id])=>{\n\tpush('❤️'+title+'榜单❤️', null, 1);\n\tif(id==2){ \tA=A.slice(1,A.length-1) }\n\t\tA.map(([title,uri])=>{\t\t\t\n\t\t  \turl= `https://novel.snssdk.com/api/novel/channel/homepage/rank/rank_list/v2/?aid=13&app_name=news_article&app_version=9.7.3&channel=tengxun_tt&device_platform=android&os=android&device_type=ProjectTitan&os_api=29&os_version=10&openlive_plugin_status=1&isTTWebViewHeifSupport=0&limit=100&offset={{(page-1)*100}}&side_type=${uri}&type=${id}`;\n\t\t\t\tpush(title, url, 0.29);\t\t\t\n\t\t\t});\n\t});\t\n\t\n\tcategory = () =>{\n\t\t\tcategory_url = \"https://novel.snssdk.com/api/novel/channel/homepage/new_category/page/data/v1/?aid=13\";\nreturn  JSON.parse(java.ajax(category_url)).data\t\t\n\t\t}\n\t\t  \n  json = (data) => {\n     boy = data.boy_category;\n     girl = data.girl_category;\n     publish = data.publish_category;\n     json = [[\"男频\",\"gender=1\",boy],[\"女频\",\"gender=0\",girl],[\"出版\",\"genre_type=160\",publish]];\n     return JSON.parse(JSON.stringify(json));\n   }\t\n\t\tjson(category()).map(([tit1,gender,category])=>{\n\t    push('❤️'+tit1+'❤️', null, 1);\n     category.map(($,index)=>{\n     \tindex++;\n\t    title = $.category_name;\n     \tcid = $.category_id;\n\t    url=  `https://novel.snssdk.com/api/novel/channel/homepage/new_category/book_list/v1/?aid=1967&app_name=news_article&app_version=9.7.3&channel=tengxun_tt&creation_status=9&device_platform=android&enter_from=novel_category&novel_host&novel_version&version_code=973&version_name=9.7.3&word_count=9&os=android&device_type=ProjectTitan&os_api=29&os_version=10&offset={{(page-1)*100}}&limit=100&category_id=${cid}&${gender}`;\n\t\t\t\tpush(title, url, 0.29);\t\n      });\n  });\n\nlet book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700' \nlet book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n  headers: {\n    'Cookie': \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']),\n  }\n})))\n\njava.log(JSON.stringify(book_shelf_info))\n\nlet username\nif (book_shelf_info.code != 0) {\n  个人中心 = 0\n} else {\n  let uinfo = java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({ headers: { Cookie: \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']) }}))\n  uinfo = JSON.parse(uinfo)\n  username = uinfo.data.name\n}\n\nlet gro = []\npushGro = (title, url, type) => gro.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n});\n\nlet sArr = []\n\nif (个人中心) {\n  let groups_bookids = {\n    \"未分组\": []\n  }\n  book_shelf_info.data.book_shelf_info.forEach(i => {\n    if (!groups_bookids[i.group_name ? i.group_name : \"未分组\"]) groups_bookids[i.group_name] = []\n    groups_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n  })\n\n  Object.keys(groups_bookids).forEach(k => {\n    var multi_detail_post_body = {\n      data: {\n        book_shelf_info: []\n      }\n    }\n    groups_bookids[k].forEach(i => multi_detail_post_body.data.book_shelf_info.push({ book_id: String(i), item_id: '0' }))\n    pushGro(k, \"https://fanqienovel.com/fqbookshelf/groupName/\" + k, 0.4)\n  })\n  if (Object.keys(groups_bookids).length % 2 != 0) pushGro(\"占位\", \"\", 0.4)\n  sArr.push(obj(username + '的个人中心', '', 1))\n  sArr.push(obj(\"我的书架\", \"https://fanqienovel.com/fqbookshelf\", 1))\n  \n  sArr = sArr.concat(gro)\n  sArr.push(obj(\"阅读历史\",\"https://fanqienovel.com/reading/bookapi/read_history/list/v/?aid=1967&app_name=novelapp&channel=0&iid=1&offset={{(page-1)*100}}&os_version=12&version_code=59732,\" + JSON.stringify({ headers: { Cookie: \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']) }}), 1))\n}\n\nsort = sArr.concat(sort)\nJSON.stringify(sort)",
    "jsLib": "function splitArray(input, size) {\n  const output = []\n  for (let i = 0; i < input.length; i += size) {\n    output.push(input.slice(i, i + size))\n  }\n  return output\n}\nfunction getHost() {\n  return \"http://api.ttdndd.me/agg/\"\n}\nfunction getApi() {\n  return \"http://api.ttdndd.me/\"\n}\nfunction gettsHost() {\n  return \"http://api.ttdndd.me/ts/\"\n}\nfunction getSecretKey() {var java = this.java;var source = this.source;var loginInfoMap = source.getLoginInfoMap();\n  return (loginInfoMap !== null) ? loginInfoMap.get(\"密钥：\") : null;\n}\nfunction getemail() {var java = this.java;var source = this.source;var loginInfoMap = source.getLoginInfoMap();\n  return (loginInfoMap !== null) ? loginInfoMap.get(\"邮箱：\") : null;\n}",
    "lastUpdateTime": 1753186879319,
    "loginUi": "[{\n        \"name\":  \"🍅番茄账号登录🍅\",\n        \"type\": \"button\",\n        \"action\": \"M()\",\n        \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },{\n        \"name\": \"邮箱：\",\n        \"type\": \"text\"\n    },{\n        \"name\": \"发送密钥\",\n        \"type\": \"button\",\n        \"action\": \"login(true)\",\n   \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"-初始化-\",\n       \"type\": \"button\",\n       \"action\": \"config.reset()\"\n    },{\n        \"name\": \"密钥：\",\n        \"type\": \"text\"\n    },{\n        \"name\": \"-显示密钥-\",\n        \"type\": \"button\",\n        \"action\": \"config.showSecretKey()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"-查看所有可用源-\",\n        \"type\": \"button\",\n        \"action\": \"config.showAllSources()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"-查看当前-\",\n        \"type\": \"button\",\n        \"action\": \"config.showCurrent()\", \n         \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"-↓切换来源↓-\",\n        \"type\": \"button\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"聚合\",\n        \"type\": \"button\",\n        \"action\": \"config.setSource('聚合')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }      \n    },\n    {\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"config.setSource('番茄')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }      \n    },{\n        \"name\": \"飞速\",\n        \"type\": \"button\",\n        \"action\": \"config.setSource('飞速')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }      \n    },{\n        \"name\": \"哔哩哔哩\",\n        \"type\": \"button\",\n        \"action\": \"config.setSource('哔哩哔哩')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }      \n    },{\n        \"name\": \"-↓切换模式↓-\",\n        \"type\": \"button\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        \"name\": \"小说\",\n        \"type\": \"button\",\n        \"action\": \"config.setTag('小说')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"短剧\",\n        \"type\": \"button\",\n        \"action\": \"config.setTag('短剧')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"漫画\",\n        \"type\": \"button\",\n        \"action\": \"config.setTag('漫画')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"听书\",\n        \"type\": \"button\",\n        \"action\": \"config.setTag('听书')\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"番剧\",\n        \"type\": \"button\",\n        \"action\": \"config.setTag('番剧')\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"-开/关-强制听书-\",\n        \"type\": \"button\",\n        \"action\": \"config.toggleForceListen()\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }      \n    },{\n        \"name\": \"↓听书音色↓\",\n        \"type\": \"button\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }      \n    },{\n        \"name\": \"默认音色\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice('default')\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"云希\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice('zh-CN-YunxiNeural')\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"晓晓\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice('zh-CN-XiaoxiaoNeural')\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice(4)\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"多人对话\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice(51)\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"真人发音\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice(0)\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice(1)\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    },{\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"config.setVoice(2)\", \n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }      \n    }]",
    "loginUrl": "M = () =>{\njava.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n }\n \nfunction hasValidSecretKey() {\n    var key = getSecretKey();    \n    return key && key.trim() != \"\";\n}\n\nfunction login() {\n    if (hasValidSecretKey()) {\n        return;\n    }\n    \n    var email = getemail();\n    if (!email || email.trim() === \"\") {\n        java.toast(\"邮箱不能为空\");\n        return;\n    }\n    \n    var host = getHost();\n    var url = host + \"genkey/,\";\n    \n    var body = JSON.stringify({\"email\": email});\n    var post = JSON.stringify({\n        \"body\": body,\n        \"method\": \"POST\"\n    });\n    \n    url += post;\n    var response = java.ajax(url);\n    \n    try {\n        var data = JSON.parse(response);\n        if (data.c === 200) {\n            java.toast(data.m);\n        } else {\n            java.toast(\"请求失败: \" + data.m);\n        }\n    } catch (e) {\n        java.toast(\"解析响应失败: \" + e);\n    }\n}\n\nfunction ConfigManager() {\n    var self = this;\n    var DEFAULT_SOURCE = \"聚合\";\n    var DEFAULT_TAG = \"小说\";\n    var AGGREGATE_SOURCE = \"聚合\";\n    \n    this.data = {\n        source: DEFAULT_SOURCE,\n        tag: DEFAULT_TAG,\n        forceListen: false,\n        voice: \"default\"\n    };\n    \n    this.sources = [];\n    this.sourceTags = {};\n    this.defaultSource = DEFAULT_SOURCE;\n    this.allTags = new Set();\n    \n    this.init = function() {\n        var stored = source.getVariable();\n        try {\n            if (stored) {\n                var parsed = JSON.parse(stored);\n                \n                if (!parsed.forceListen) parsed.forceListen = false;\n                if (!parsed.voice) parsed.voice = \"default\";\n                \n                self.data = parsed;\n                java.toast(\"配置加载成功\");\n                return;\n            }\n        } catch(e) {\n            java.log(\"解析存储数据失败: \" + e);\n        }\n        \n        self.data = {\n            source: DEFAULT_SOURCE,\n            tag: DEFAULT_TAG,\n            mode: \"default\",\n            forceListen: false,\n            voice: \"default\"\n        };\n        self.save();\n        java.toast(\"\\n首次使用\\n已初始化为默认配置\\n源: \" + DEFAULT_SOURCE + \"\\n模式: \" + DEFAULT_TAG);\n    };\n    \n    this.save = function() {\n        source.setVariable(JSON.stringify(self.data));\n    };\n    \n    this.fetchSources = function() {\n        if (!hasValidSecretKey()) {\n            java.toast(\"请先填写有效的密钥信息\");\n            return false;\n        }\n        \n        var url = getHost() + \"sources?key=\" + getSecretKey();\n        var response = java.ajax(url);\n        try {\n            var data = JSON.parse(response);\n            if (data.c === 200) {\n                self.sources = data.data.sources;\n                self.defaultSource = data.data.default_source || DEFAULT_SOURCE;\n                self.sourceTags = {};\n                self.allTags = new Set();\n                \n                for (var i = 0; i < self.sources.length; i++) {\n                    var src = self.sources[i];\n                    var tags = [DEFAULT_TAG];\n                    \n                    if (src.supported_types && src.supported_types.length > 0) {\n                        tags = src.supported_types;\n                    }\n                    \n                    tags.forEach(function(tag) {\n                        self.allTags.add(tag);\n                    });\n                    \n                    self.sourceTags[src.id] = tags;\n                }\n                \n                self.sourceTags[AGGREGATE_SOURCE] = Array.from(self.allTags);\n                \n                java.putSharedData(\"source_tags\", JSON.stringify(self.sourceTags));\n                java.putSharedData(\"default_source\", self.defaultSource);\n                \n                return true;\n            }\n        } catch(e) {\n            java.log(\"获取源信息失败: \" + e);\n        }\n        return false;\n    };\n    \n    this.setSource = function(sourceId) {\n        self.data.forceListen = false;\n        \n        if (sourceId === AGGREGATE_SOURCE) {\n            self.data.source = AGGREGATE_SOURCE;\n            self.save();\n            java.toast(\"\\n已切换到聚合源\\n支持所有标签!\\n强制听书已关闭\");\n            self.showCurrent();\n            return true;\n        }\n        \n        if (!self.sourceTags.hasOwnProperty(sourceId)) {\n            java.toast(\"\\n错误: 不支持的源 - \" + sourceId);\n            return false;\n        }\n        \n        self.data.source = sourceId;\n        \n        var currentTags = self.sourceTags[sourceId] || [DEFAULT_TAG];\n        if (currentTags.indexOf(self.data.tag) === -1) {\n            self.data.tag = currentTags[0] || DEFAULT_TAG;\n            java.toast(\"\\n源切换成功!\\n模式已自动调整为: \" + self.data.tag + \"\\n强制听书已关闭\");\n        } else {\n            java.toast(\"\\n源切换成功!\\n强制听书已关闭\");\n        }\n        \n        self.save();\n        self.showCurrent();\n        return true;\n    };\n    \n    this.setTag = function(tag) {\n        self.data.forceListen = false;\n        \n        if (self.data.source === AGGREGATE_SOURCE) {\n            self.data.tag = tag;\n            self.save();\n            java.toast(\"\\n模式设置成功: \" + tag + \"\\n强制听书已关闭\");\n            self.showCurrent();\n            return true;\n        }\n        \n        var currentTags = self.sourceTags[self.data.source] || [DEFAULT_TAG];\n        if (currentTags.indexOf(tag) === -1) {\n            java.toast(\"\\n错误: 当前源不支持模式 - \" + tag);\n            return false;\n        }\n        \n        self.data.tag = tag;\n        self.save();\n        java.toast(\"\\n模式设置成功: \" + tag + \"\\n强制听书已关闭\");\n        self.showCurrent();\n        return true;\n    };\n    \n    this.toggleForceListen = function() {\n        if (self.data.tag != \"小说\") {\n            java.toast(\"\\n错误: 强制听书只支持小说模式\\n当前模式: \" + self.data.tag);\n            return false;\n        }\n        \n        self.data.forceListen = !self.data.forceListen;\n        self.save();\n        \n        var status = self.data.forceListen ? \"开启\" : \"关闭\";\n        java.toast(\"\\n强制听书 \" + status);\n        return true;\n    };\n    \n    this.setVoice = function(voiceId) {\n        self.data.voice = voiceId;\n        self.save();\n        java.toast(\"\\n音色设置成功: \" + voiceId);\n        return true;\n    };\n    \n    this.showCurrent = function() {\n        var msg = \"\\n当前配置:\";\n        msg += \"\\n源: \" + self.data.source;\n        msg += \"\\n模式: \" + self.data.tag;\n        msg += \"\\n强制听书: \" + (self.data.forceListen ? \"开启\" : \"关闭\");\n        msg += \"\\n音色: \" + self.data.voice;\n        \n        if (self.data.source === AGGREGATE_SOURCE) {\n            msg += \"\\n\\n聚合源支持所有模式:\";\n            var allTagsArray = Array.from(self.allTags);\n            if (allTagsArray.length > 0) {\n                for (var i = 0; i < Math.min(5, allTagsArray.length); i++) {\n                    msg += \"\\n- \" + allTagsArray[i];\n                }\n                if (allTagsArray.length > 5) {\n                    msg += \"\\n...等 \" + allTagsArray.length + \" 个模式\";\n                }\n            }\n        } else {\n            var tags = self.sourceTags[self.data.source];\n            if (tags && tags.length > 0) {\n                msg += \"\\n\\n支持的模式: \" + tags.join(\", \");\n            }\n        }\n        \n        if (self.data.forceListen) {\n            msg += \"\\n\\n强制听书已开启:\";\n            msg += \"\\n- 将使用听书功能\";\n            msg += \"\\n- 使用音色: \" + self.data.voice;\n        }\n        \n        java.longToast(msg);\n    };\n    \n    this.showAllSources = function() {\n        if (self.sources.length === 0) {\n            java.toast(\"\\n没有可用的源信息，请先填写有效密钥\");\n            return;\n        }\n        \n        var msg = \"可用源列表:\";\n        for (var i = 0; i < self.sources.length; i++) {\n            var src = self.sources[i];\n            msg += \"\\n\\nID: \" + src.id;\n            msg += \"\\n名称: \" + src.name;\n            \n            if (src.supported_types && src.supported_types.length > 0) {\n                msg += \"\\n支持模式: \" + src.supported_types.join(\", \");\n            }\n        }\n        \n        msg += \"\\n\\nID: \" + AGGREGATE_SOURCE;\n        msg += \"\\n名称: 聚合源\";\n        msg += \"\\n支持模式: 所有模式\";\n        \n        java.longToast(msg);\n    };\n    \n    this.reset = function() {\n        self.data = {\n            source: self.defaultSource || DEFAULT_SOURCE,\n            tag: DEFAULT_TAG,\n            mode: \"default\",\n            forceListen: false,\n            voice: \"default\"\n        };\n        self.save();\n        java.toast(\"\\n已重置为默认配置\");\n        self.showCurrent();\n    };\n    \n    this.showSecretKey = function() {\n        var key = getSecretKey();\n        if (hasValidSecretKey()) {\n            java.toast(\"当前密钥: \" + key);\n        } else {\n            java.toast(\"未设置有效密钥\");\n        }\n    };\n    \n    this.init();\n}\n\nvar config = new ConfigManager();\n\nif (hasValidSecretKey()) {\n    config.fetchSources();\n} else {\n    java.toast(\"检测到未设置密钥\");\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "$.cover",
      "init": "<js>\ninfo = JSON.parse(result).data\njava.put(\"source\",info.book_info.source)\nJSON.stringify(info.book_info);\n</js>",
      "intro": "<br>\n当前源：{{java.get(\"source\")}}\n当前模式：{{java.get(\"ts\")}}\n{{$.text}}",
      "kind": "{{book.kind}},{{$.kind}}",
      "lastChapter": "latest_chapter",
      "name": "title"
    },
    "ruleContent": {
      "content": "<js>\nvar variable = source.getVariable();\nvar params = JSON.parse(variable);\nvar forceListen = params.forceListen;\nvar voice = params.voice;\nvar ts = java.get(\"ts\"); \nvar chapter_id = java.hexDecodeToString(result);\nvar sources =java.get(\"source\");  \nvar Host = getHost();\nvar Key = getSecretKey();\nvar url = Host + \"content?content=\" + chapter_id + \"&source=\" + sources + \"&key=\" + Key + \"&ts=\" + ts;\njava.log(url)\n\nif (ts == \"小说\" && forceListen) {\n    // TTS\n    java.log(book.type)\n    var r = java.ajax(url);\n    java.log(r)\n    var textContent = JSON.parse(r).data;   \n    var voiceRole = (voice == \"default\") ? \"zh-CN-YunxiNeural\" : voice;\n    var ttsUrl = \"http://api.ttdndd.me/ts/,\";\n    textContent = textContent.replace(/<html><head><\\/head><body>/, \"\");\n    var body = JSON.stringify({\"text\": textContent, \"ai\": voiceRole});\n    var post = JSON.stringify({\n        \"body\": body,\n        \"method\": \"POST\"\n    });\n    ttsUrl = ttsUrl + post;\n    \n    var ttsResponse = java.ajax(ttsUrl);\n    var ttsData = JSON.parse(ttsResponse);\n    if (ttsData.status == \"success\") {\n        ttsData.audio_url;\n    } else {\n        \"语音生成失败: \" + ttsData.message;\n    }\n} else if (ts == \"听书\" && !forceListen && !isNaN(voice)) {\n    java.log(book.type)\n    var aggUrl = \"http://api.ttdndd.me/agg/content?content=\" + chapter_id + \n                 \"&source=\" + sources + \"&key=\" + Key + \"&ts=\" + ts + \"&role=\" + voice;\n    var aggResponse = java.ajax(aggUrl);\n    var aggData = JSON.parse(aggResponse);\n    if (aggData.c == 200) {\n        aggData.data;  \n    } else {\n        \"聚合接口错误: \" + aggData.m;\n    }\n} else if (ts == \"听书\" || ts == \"小说\" || ts == \"漫画\") {\n\tjava.log(book.type)\n    var r = java.ajax(url);\n    JSON.parse(r).data;\n} else if (ts == \"短剧\" || ts == \"番剧\") {\n\ttitle=java.get(\"title\")\n\tjava.log(book.type)\n  var r = java.ajax(url);\n  content=JSON.parse(r).data;\n  java.log(content)\n\tif(book.durChapterIndex==chapter.index){\nvar html=`<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n      <title>${title}</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            -webkit-tap-highlight-color: transparent;\n        }\n        \n        body {\n            background: #000;\n            color: #fff;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            height: 100vh;\n            overflow: hidden;\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        \n        .player-container {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: #000;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            z-index: 100;\n            overflow: hidden;\n        }\n        \n        video {\n            max-width: 100%;\n            max-height: 100%;\n            transition: all 0.5s ease;\n            background: #000;\n        }\n        \n        .player-container.landscape video {\n            max-width: 70%;\n            max-height: 70%;\n        }\n        \n        .start-overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            background: rgba(0,0,0,0.7);\n            z-index: 15;\n        }\n        \n        .start-button {\n            width: 100px;\n            height: 100px;\n            border-radius: 50%;\n            background: rgba(255, 51, 102, 0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-size: 2.5rem;\n            color: white;\n            cursor: pointer;\n            box-shadow: 0 0 30px rgba(255, 51, 102, 0.6);\n            animation: pulse 2s infinite;\n            transition: transform 0.2s;\n        }\n        \n        .start-button:active {\n            transform: scale(0.95);\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 51, 102, 0.7); }\n            70% { transform: scale(1.05); box-shadow: 0 0 0 15px rgba(255, 51, 102, 0); }\n            100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 51, 102, 0); }\n        }\n        \n        .start-text {\n            margin-top: 25px;\n            font-size: 1.3rem;\n            text-align: center;\n            max-width: 80%;\n            line-height: 1.5;\n            color: rgba(255, 255, 255, 0.9);\n            text-shadow: 0 1px 3px rgba(0,0,0,0.5);\n        }\n        \n        .controls {\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);\n            padding: 20px 15px 35px;\n            display: flex;\n            flex-direction: column;\n            z-index: 10;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .player-container.show-controls .controls {\n            opacity: 1;\n        }\n        \n        .progress-container {\n            width: 100%;\n            height: 6px;\n            background: rgba(255,255,255,0.2);\n            border-radius: 3px;\n            margin-bottom: 20px;\n            position: relative;\n            cursor: pointer;\n            overflow: hidden;\n        }\n        \n        .progress-bg {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            width: 100%;\n            background: rgba(255,255,255,0.1);\n            border-radius: 3px;\n        }\n        \n        .progress {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            width: 0%;\n            background: #ff3366;\n            border-radius: 3px;\n            transition: width 0.1s linear;\n        }\n        \n        .progress-thumb {\n            position: absolute;\n            top: 50%;\n            right: -8px;\n            width: 16px;\n            height: 16px;\n            background: white;\n            border-radius: 50%;\n            transform: translateY(-50%);\n            box-shadow: 0 0 8px rgba(0,0,0,0.5);\n            transition: transform 0.2s, box-shadow 0.2s;\n        }\n        \n        .progress-container.dragging .progress-thumb {\n            transform: translateY(-50%) scale(1.3);\n            box-shadow: 0 0 12px rgba(255,255,255,0.7);\n        }\n        \n        .buffered {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            width: 0%;\n            background: rgba(255,255,255,0.3);\n            border-radius: 3px;\n            transition: width 0.2s;\n        }\n        \n        .time {\n            display: flex;\n            justify-content: space-between;\n            font-size: 0.85rem;\n            color: rgba(255,255,255,0.8);\n            margin-bottom: 15px;\n        }\n        \n        .control-buttons {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .play-btn {\n            background: rgba(255,255,255,0.15);\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 1.8rem;\n            transition: transform 0.2s, background 0.2s;\n        }\n        \n        .play-btn:active {\n            transform: scale(0.9);\n            background: rgba(255,255,255,0.25);\n        }\n        \n        .side-buttons {\n            display: flex;\n            gap: 20px;\n        }\n        \n        .side-btn {\n            color: white;\n            font-size: 1.4rem;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            position: relative;\n        }\n        \n        .volume-container {\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .volume-slider {\n            width: 80px;\n            height: 6px;\n            background: rgba(255,255,255,0.2);\n            border-radius: 3px;\n            -webkit-appearance: none;\n            appearance: none;\n            outline: none;\n            transition: all 0.2s;\n        }\n        \n        .volume-slider::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            appearance: none;\n            width: 14px;\n            height: 14px;\n            border-radius: 50%;\n            background: white;\n            cursor: pointer;\n            transition: transform 0.2s;\n        }\n        \n        .volume-slider::-webkit-slider-thumb:active {\n            transform: scale(1.3);\n        }\n        \n        .play-overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 8;\n            opacity: 0;\n            pointer-events: none;\n            transition: opacity 0.3s;\n        }\n        \n        .big-play-btn {\n            width: 80px;\n            height: 80px;\n            background: rgba(255,255,255,0.2);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 2.5rem;\n            backdrop-filter: blur(10px);\n        }\n        \n        .loading {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 1.2rem;\n            color: rgba(255,255,255,0.7);\n            z-index: 5;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 15px;\n        }\n        \n        .loading-spinner {\n            width: 50px;\n            height: 50px;\n            border: 4px solid rgba(255,255,255,0.1);\n            border-top: 4px solid #ff3366;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        .speed-display {\n            position: absolute;\n            top: 20px;\n            right: 20px;\n            background: rgba(0,0,0,0.7);\n            padding: 8px 15px;\n            border-radius: 20px;\n            font-size: 0.9rem;\n            z-index: 10;\n            opacity: 0;\n            transition: opacity 0.3s;\n            backdrop-filter: blur(5px);\n        }\n        \n        .player-container.show-speed .speed-display {\n            opacity: 1;\n        }\n        \n        .volume-display {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.7);\n            padding: 8px 15px;\n            border-radius: 20px;\n            font-size: 0.9rem;\n            z-index: 10;\n            opacity: 0;\n            transition: opacity 0.3s;\n            backdrop-filter: blur(5px);\n        }\n        \n        .player-container.show-volume .volume-display {\n            opacity: 1;\n        }\n        \n        .preview-thumbnail {\n            position: absolute;\n            width: 120px;\n            height: 70px;\n            border-radius: 5px;\n            border: 2px solid white;\n            box-shadow: 0 5px 15px rgba(0,0,0,0.5);\n            transform: translate(-50%, -100%);\n            opacity: 0;\n            transition: opacity 0.2s;\n            pointer-events: none;\n            z-index: 20;\n            background: #000;\n            overflow: hidden;\n        }\n        \n        .preview-thumbnail img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n        \n        .preview-time {\n            position: absolute;\n            bottom: 5px;\n            left: 0;\n            right: 0;\n            text-align: center;\n            font-size: 0.7rem;\n            background: rgba(0,0,0,0.7);\n            padding: 3px;\n        }\n        \n        .landscape-btn {\n            position: absolute;\n            top: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: rgba(0,0,0,0.7);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 30px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            cursor: pointer;\n            z-index: 25;\n            transition: all 0.3s;\n            backdrop-filter: blur(5px);\n            box-shadow: 0 0 15px rgba(0,0,0,0.5);\n            opacity: 0;\n            pointer-events: none;\n            transition: opacity 0.4s ease, transform 0.3s ease;\n        }\n        \n        .landscape-btn.show {\n            opacity: 1;\n            pointer-events: all;\n        }\n        \n        .landscape-btn.hidden {\n            opacity: 0;\n            pointer-events: none;\n        }\n        \n        .landscape-btn i {\n            font-size: 1.2rem;\n        }\n        \n        .player-container.landscape .landscape-btn {\n            display: flex;\n        }\n        \n        @media (max-width: 480px) {\n            .controls {\n                padding: 15px 15px 30px;\n            }\n            \n            .play-btn {\n                width: 45px;\n                height: 45px;\n                font-size: 1.6rem;\n            }\n            \n            .side-buttons {\n                gap: 15px;\n            }\n            \n            .volume-slider {\n                width: 60px;\n            }\n            \n            .start-button {\n                width: 80px;\n                height: 80px;\n                font-size: 2rem;\n            }\n            \n            .start-text {\n                font-size: 1.1rem;\n            }\n            \n            .speed-display, .volume-display {\n                padding: 6px 12px;\n                font-size: 0.8rem;\n            }\n            \n            .landscape-btn {\n                font-size: 0.9rem;\n                padding: 8px 15px;\n            }\n            \n            .player-container.landscape video {\n                max-width: 85%;\n                max-height: 85%;\n            }\n        }\n        \n        /* 横屏模式下的特殊样式 */\n        .player-container.fullscreen-landscape {\n            background: #000;\n        }\n        \n        .player-container.fullscreen-landscape video {\n            max-width: 100%;\n            max-height: 100%;\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n        }\n        \n        .player-container.fullscreen-landscape .landscape-btn {\n            display: none;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"player-container\" id=\"playerContainer\">\n        <video id=\"videoPlayer\">\n            <source src=\"${content}\" type=\"video/mp4\">\n            您的浏览器不支持HTML5视频播放。\n        </video>\n        \n        <div class=\"landscape-btn\" id=\"landscapeBtn\">\n            <i class=\"fas fa-expand\"></i> 横屏播放\n        </div>\n        \n        <div class=\"start-overlay\" id=\"startOverlay\">\n            <div class=\"start-button\" id=\"startButton\">\n                <i class=\"fas fa-play\"></i>\n            </div>\n            <div class=\"start-text\">点击播放按钮开始观看视频</div>\n        </div>\n        \n        <div class=\"controls\">\n            <div class=\"progress-container\" id=\"progressContainer\">\n                <div class=\"progress-bg\"></div>\n                <div class=\"buffered\" id=\"buffered\"></div>\n                <div class=\"progress\" id=\"progress\">\n                    <div class=\"progress-thumb\"></div>\n                </div>\n                <div class=\"preview-thumbnail\" id=\"previewThumbnail\">\n                    <div class=\"preview-time\">00:00</div>\n                </div>\n            </div>\n            \n            <div class=\"time\">\n                <span id=\"currentTime\">00:00</span>\n                <span id=\"duration\">00:00</span>\n            </div>\n            \n            <div class=\"control-buttons\">\n                <div class=\"play-btn\" id=\"playBtn\">\n                    <i class=\"fas fa-pause\"></i>\n                </div>\n                \n                <div class=\"side-buttons\">\n                    <div class=\"side-btn\" id=\"speedBtn\">\n                        <i class=\"fas fa-running\"></i>\n                    </div>\n                    \n                    <div class=\"volume-container\">\n                        <i class=\"fas fa-volume-up\" id=\"volumeIcon\"></i>\n                        <input type=\"range\" class=\"volume-slider\" id=\"volumeSlider\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0.5\">\n                    </div>\n                    \n                    <div class=\"side-btn\" id=\"fullscreenBtn\">\n                        <i class=\"fas fa-expand\"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"play-overlay\" id=\"playOverlay\">\n            <div class=\"big-play-btn\">\n                <i class=\"fas fa-pause\"></i>\n            </div>\n        </div>\n        \n        <div class=\"loading\" id=\"loading\">\n            <div class=\"loading-spinner\"></div>\n            <div>加载中...</div>\n        </div>\n        \n        <div class=\"speed-display\" id=\"speedDisplay\">正常速度</div>\n        <div class=\"volume-display\" id=\"volumeDisplay\">音量: 50%</div>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            \n            var video = document.getElementById('videoPlayer');\n            var playerContainer = document.getElementById('playerContainer');\n            var startOverlay = document.getElementById('startOverlay');\n            var startButton = document.getElementById('startButton');\n            var playBtn = document.getElementById('playBtn');\n            var progress = document.getElementById('progress');\n            var progressContainer = document.getElementById('progressContainer');\n            var buffered = document.getElementById('buffered');\n            var currentTime = document.getElementById('currentTime');\n            var duration = document.getElementById('duration');\n            var fullscreenBtn = document.getElementById('fullscreenBtn');\n            var playOverlay = document.getElementById('playOverlay');\n            var speedBtn = document.getElementById('speedBtn');\n            var volumeSlider = document.getElementById('volumeSlider');\n            var volumeIcon = document.getElementById('volumeIcon');\n            var loading = document.getElementById('loading');\n            var speedDisplay = document.getElementById('speedDisplay');\n            var volumeDisplay = document.getElementById('volumeDisplay');\n            var previewThumbnail = document.getElementById('previewThumbnail');\n            var previewTime = previewThumbnail.querySelector('.preview-time');\n            var landscapeBtn = document.getElementById('landscapeBtn');\n            \n            \n            var isDragging = false;\n            var speedTimeout, volumeTimeout;\n            var isLandscapeMode = false;\n            var isFullscreen = false;\n            var isAutoLandscape = false;\n            \n            \n            playerContainer.classList.add('show-controls');\n            video.volume = 0.5;\n            \n            \n            function checkFullscreen() {\n                isFullscreen = document.fullscreenElement || \n                              document.webkitFullscreenElement || \n                              document.mozFullScreenElement || \n                              document.msFullscreenElement;\n                updateLandscapeBtnVisibility();\n            }\n            \n            \n            function updateLandscapeBtnVisibility() {\n                if (isFullscreen) {\n                    landscapeBtn.classList.add('hidden');\n                } else if (video.videoWidth > video.videoHeight) {\n                    landscapeBtn.classList.remove('hidden');\n                    landscapeBtn.classList.add('show');\n                } else {\n                    landscapeBtn.classList.add('hidden');\n                    landscapeBtn.classList.remove('show');\n                }\n            }\n            \n            \n            function checkVideoOrientation() {\n                if (video.videoWidth > video.videoHeight) {\n                    \n                    playerContainer.classList.add('landscape');\n                    if (!isFullscreen) {\n                        landscapeBtn.classList.remove('hidden');\n                        landscapeBtn.classList.add('show');\n                    }\n                } else {\n                    playerContainer.classList.remove('landscape');\n                    landscapeBtn.classList.add('hidden');\n                    landscapeBtn.classList.remove('show');\n                }\n            }\n            \n            \n            function startPlayback() {\n                startOverlay.style.display = 'none';\n                video.play();\n                playBtn.innerHTML = '<i class=\"fas fa-pause\"></i>';\n                playerContainer.classList.add('show-controls');\n                \n                \n                checkLandscapeMode();\n            }\n            \n            startButton.addEventListener('click', startPlayback);\n            \n            \n            function togglePlay() {\n                if (video.paused) {\n                    video.play();\n                    playBtn.innerHTML = '<i class=\"fas fa-pause\"></i>';\n                    playOverlay.innerHTML = '<div class=\"big-play-btn\"><i class=\"fas fa-pause\"></i></div>';\n                } else {\n                    video.pause();\n                    playBtn.innerHTML = '<i class=\"fas fa-play\"></i>';\n                    playOverlay.innerHTML = '<div class=\"big-play-btn\"><i class=\"fas fa-play\"></i></div>';\n                }\n                \n                playOverlay.style.opacity = 1;\n                setTimeout(function() {\n                    playOverlay.style.opacity = 0;\n                }, 500);\n            }\n            \n            playBtn.addEventListener('click', togglePlay);\n            \n            \n            function updateProgress() {\n                if (isDragging) return;\n                \n                var percent = (video.currentTime / video.duration) * 100;\n                progress.style.width = percent + '%';\n                \n                \n                var currentMins = Math.floor(video.currentTime / 60);\n                var currentSecs = Math.floor(video.currentTime % 60);\n                var durationMins = Math.floor(video.duration / 60);\n                var durationSecs = Math.floor(video.duration % 60);\n                \n                currentTime.textContent = \n                    (currentMins < 10 ? '0' : '') + currentMins + ':' + (currentSecs < 10 ? '0' : '') + currentSecs;\n                \n                duration.textContent = \n                    (durationMins < 10 ? '0' : '') + durationMins + ':' + (durationSecs < 10 ? '0' : '') + durationSecs;\n                \n                \n                if (video.buffered.length > 0) {\n                    var bufferedEnd = video.buffered.end(video.buffered.length - 1);\n                    var bufferedPercent = (bufferedEnd / video.duration) * 100;\n                    buffered.style.width = bufferedPercent + '%';\n                }\n            }\n            \n            video.addEventListener('timeupdate', updateProgress);\n            \n            \n            function startDrag(e) {\n                e.preventDefault();\n                isDragging = true;\n                progressContainer.classList.add('dragging');\n                \n                \n                previewThumbnail.style.opacity = 0;\n                \n                \n                document.addEventListener('mousemove', drag);\n                document.addEventListener('mouseup', endDrag);\n                document.addEventListener('touchmove', drag);\n                document.addEventListener('touchend', endDrag);\n                \n                \n                updateDrag(e);\n            }\n            \n            function drag(e) {\n                if (!isDragging) return;\n                updateDrag(e);\n            }\n            \n            function updateDrag(e) {\n                var rect = progressContainer.getBoundingClientRect();\n                var position;\n                \n                if (e.type.indexOf('touch') !== -1) {\n                    position = (e.touches[0].clientX - rect.left) / rect.width;\n                } else {\n                    position = (e.clientX - rect.left) / rect.width;\n                }\n                \n                position = Math.max(0, Math.min(1, position));\n                var newTime = position * video.duration;\n                \n                \n                progress.style.width = (position * 100) + '%';\n                \n                \n                var previewMins = Math.floor(newTime / 60);\n                var previewSecs = Math.floor(newTime % 60);\n                previewTime.textContent = \n                    (previewMins < 10 ? '0' : '') + previewMins + ':' + (previewSecs < 10 ? '0' : '') + previewSecs;\n                \n                \n                currentTime.textContent = previewTime.textContent;\n            }\n            \n            function endDrag(e) {\n                if (!isDragging) return;\n                \n                var rect = progressContainer.getBoundingClientRect();\n                var position;\n                \n                if (e.type.indexOf('touch') !== -1) {\n                    position = (e.changedTouches[0].clientX - rect.left) / rect.width;\n                } else {\n                    position = (e.clientX - rect.left) / rect.width;\n                }\n                \n                position = Math.max(0, Math.min(1, position));\n                video.currentTime = position * video.duration;\n                \n                \n                document.removeEventListener('mousemove', drag);\n                document.removeEventListener('mouseup', endDrag);\n                document.removeEventListener('touchmove', drag);\n                document.removeEventListener('touchend', endDrag);\n                \n                \n                progressContainer.classList.remove('dragging');\n                isDragging = false;\n            }\n            \n            progressContainer.addEventListener('mousedown', startDrag);\n            progressContainer.addEventListener('touchstart', startDrag);\n            \n            \n            video.addEventListener('waiting', function() {\n                loading.style.display = 'flex';\n            });\n            \n            video.addEventListener('playing', function() {\n                loading.style.display = 'none';\n            });\n            \n            \n            function toggleFullscreen() {\n                if (!document.fullscreenElement) {\n                    \n                    if (playerContainer.requestFullscreen) {\n                        playerContainer.requestFullscreen();\n                    } else if (playerContainer.webkitRequestFullscreen) {\n                        playerContainer.webkitRequestFullscreen();\n                    } else if (playerContainer.msRequestFullscreen) {\n                        playerContainer.msRequestFullscreen();\n                    }\n                    isFullscreen = true;\n                    playerContainer.classList.add('fullscreen-landscape');\n                } else {\n                    \n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    } else if (document.webkitExitFullscreen) {\n                        document.webkitExitFullscreen();\n                    } else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    isFullscreen = false;\n                    playerContainer.classList.remove('fullscreen-landscape');\n                }\n                updateLandscapeBtnVisibility();\n            }\n            \n            fullscreenBtn.addEventListener('click', toggleFullscreen);\n            landscapeBtn.addEventListener('click', toggleFullscreen);\n            \n            \n            function handleFullscreenChange() {\n                if (document.fullscreenElement || \n                    document.webkitFullscreenElement || \n                    document.mozFullScreenElement || \n                    document.msFullscreenElement) {\n                    isFullscreen = true;\n                    playerContainer.classList.add('fullscreen-landscape');\n                } else {\n                    isFullscreen = false;\n                    playerContainer.classList.remove('fullscreen-landscape');\n                    \n                    \n                    if (isLandscapeMode) {\n                        enterLandscapeMode();\n                    }\n                }\n                updateLandscapeBtnVisibility();\n            }\n            \n            document.addEventListener('fullscreenchange', handleFullscreenChange);\n            document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\n            document.addEventListener('mozfullscreenchange', handleFullscreenChange);\n            document.addEventListener('MSFullscreenChange', handleFullscreenChange);\n            \n            \n            var controlsTimeout;\n            \n            function showControls() {\n                playerContainer.classList.add('show-controls');\n                clearTimeout(controlsTimeout);\n                controlsTimeout = setTimeout(function() {\n                    playerContainer.classList.remove('show-controls');\n                }, 3000);\n            }\n            \n            playerContainer.addEventListener('mousemove', showControls);\n            playerContainer.addEventListener('touchstart', showControls);\n            \n            \n            volumeSlider.addEventListener('input', function() {\n                video.volume = this.value;\n                updateVolumeIcon();\n                \n                \n                volumeDisplay.textContent = '音量: ' + Math.round(video.volume * 100) + '%';\n                playerContainer.classList.add('show-volume');\n                clearTimeout(volumeTimeout);\n                volumeTimeout = setTimeout(function() {\n                    playerContainer.classList.remove('show-volume');\n                }, 2000);\n            });\n            \n            function updateVolumeIcon() {\n                if (video.volume === 0) {\n                    volumeIcon.className = 'fas fa-volume-mute';\n                } else if (video.volume < 0.5) {\n                    volumeIcon.className = 'fas fa-volume-down';\n                } else {\n                    volumeIcon.className = 'fas fa-volume-up';\n                }\n            }\n            \n            \n            speedBtn.addEventListener('click', function() {\n                var speeds = [0.5, 0.75, 1, 1.25, 1.5, 2];\n                var currentSpeed = video.playbackRate;\n                var currentIndex = speeds.indexOf(currentSpeed);\n                var nextIndex = (currentIndex + 1) % speeds.length;\n                \n                video.playbackRate = speeds[nextIndex];\n                \n                \n                if (speeds[nextIndex] === 1) {\n                    speedDisplay.textContent = '正常速度';\n                } else {\n                    speedDisplay.textContent = speeds[nextIndex] + 'x 倍速';\n                }\n                \n                \n                playerContainer.classList.add('show-speed');\n                clearTimeout(speedTimeout);\n                speedTimeout = setTimeout(function() {\n                    playerContainer.classList.remove('show-speed');\n                }, 2000);\n            });\n            \n            \n            video.addEventListener('ended', function() {\n                playBtn.innerHTML = '<i class=\"fas fa-play\"></i>';\n                playOverlay.innerHTML = '<div class=\"big-play-btn\"><i class=\"fas fa-play\"></i></div>';\n                playOverlay.style.opacity = 1;\n                \n                if (isFullscreen) {\n                    toggleFullscreen();\n                } else {\n                    startOverlay.style.display = 'flex';\n                }\n            });\n            \n            \n            video.addEventListener('loadedmetadata', function() {\n                var mins = Math.floor(video.duration / 60);\n                var secs = Math.floor(video.duration % 60);\n                duration.textContent = \n                    (mins < 10 ? '0' : '') + mins + ':' + (secs < 10 ? '0' : '') + secs;\n                \n                \n                checkVideoOrientation();\n                checkFullscreen(); \n            });\n            \n            video.addEventListener('resize', checkVideoOrientation);\n            \n            \n            updateVolumeIcon();\n            \n            \n            landscapeBtn.addEventListener('mouseenter', function() {\n                this.style.transform = 'translateX(-50%) scale(1.05)';\n            });\n            \n            landscapeBtn.addEventListener('mouseleave', function() {\n                this.style.transform = 'translateX(-50%)';\n            });\n            \n            \n            function checkLandscapeMode() {\n                \n                if (window.innerWidth > window.innerHeight) {\n                    enterLandscapeMode();\n                } else {\n                    exitLandscapeMode();\n                }\n            }\n            \n            \n            function enterLandscapeMode() {\n                isLandscapeMode = true;\n                if (!isFullscreen) {\n                    toggleFullscreen();\n                }\n                playerContainer.classList.add('fullscreen-landscape');\n            }\n            \n            \n            function exitLandscapeMode() {\n                isLandscapeMode = false;\n                if (isFullscreen) {\n                    toggleFullscreen();\n                }\n                playerContainer.classList.remove('fullscreen-landscape');\n            }\n            \n            \n            window.addEventListener('resize', function() {\n                checkLandscapeMode();\n            });\n            \n            \n            checkLandscapeMode();\n        });\n    </script>\n</body>\n</html>\n`;\n\n\ncontenth_html=java.base64Encode(html)\ncontent_url= `data:text/html;base64,${contenth_html}`;\n\njava.startBrowser(content_url,'加载可能有些慢，网站上也是如此，请耐心等待');\n \n\t}\n\t'【刷新正文】播放\\n直链:\\n' + baseUrl\n\t\n\t}\n</js>"
    },
    "ruleExplore": {
      "author": "$..author",
      "bookList": "<js>\nfunction getBookIdFull(url) {\n    const {java} = this\n    $ = JSON.parse(url).data\n    if ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n        arr = $.book_shelf_info.map($ => $.book_id)\n    } else if (list = $.data_list != 0 && $.data_list != undefined)  {\n        arr = $.data_list.map($ => $.book_id_str)\n    } else {\n        java.toast(\"获取 book_id 失败，你可能需要登录！\")\n    }\n    return arr\n}\n\nlet ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token'])\n\ngetShelf = () => {\n    let book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\n    let book_shelf_info = java.ajax(book_shelf_url + ', ' + JSON.stringify({\n        headers: {\n            'Cookie': ck\n        }\n    }))\n\n    bid = getBookIdFull(book_shelf_info)\n    let id_list = splitArray(bid, 200)\n    let urls = []\n    id_list.forEach(i => {\n        urls.push(getApi() + \"fq_details/?book_id=\" + i.join(\",\"))\n    })\n\n    res = java.ajaxAll(urls)\n\n    let resp = {book_info: []}\n    res.forEach(r => {\n        resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n    })\n\n    return resp\n}\n\nfunction getByGroupName(name) {\n    let book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\n\n    let book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n        headers: {\n            'Cookie': ck,\n        }\n    })))\n    let group_bookids = {\n        \"未分组\": []\n    }\n    book_shelf_info.data.book_shelf_info.forEach(i => {\n        if (!group_bookids[i.group_name ? i.group_name : \"未分组\"]) group_bookids[i.group_name] = []\n        group_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n    })\n    \n    if (!group_bookids[decodeURIComponent(name)]) return {data: []}\n    \n    let book_ids = splitArray(group_bookids[decodeURIComponent(name)], 100)\n    let urls = []\n\n    book_ids.forEach(i => {\n        urls.push(getApi() + \"fq_details/?book_id=\" + i.join(\",\"))\n    })\n    \n    res = java.ajaxAll(urls)\n\n    let resp = {book_info: []}\n    res.forEach(r => {\n        resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n    })\n\n    return resp\n}\n\nfunction getByTabIndex(index) {\n    let url = _mlsec.requestHeader(\n        \"bookmall/tab\",\n        \"version_name=5.8.9.32\",\n        null,\n        ck\n    )\n    let all = JSON.parse(java.ajax(url))\n    let tab = all.data.tab_item[0].cell_data[index].cell_data\n    if (!tab) tab = []\n    let bookList = []\n    for (let i of tab) {\n        bookList = bookList.concat(i.book_data)\n    }\n    return { book_info: bookList }\n}\n\nfunction normalizeResponse(data) {\n    if (data.book_info) return data.book_info;\n    if (data.data && data.data.book_info) return data.data.book_info;\n    if (data.data && Array.isArray(data.data)) return data.data;\n    if (data.list) return data.list;\n    if (data.book_list) return data.book_list;\n    if (data.data && data.data.publication_list) return data.data.publication_list;\n    if (data.result) return data.result;\n    if (data.data && data.data.result) return data.data.result;\n    if (data.data && data.data.cell_view && data.data.cell_view.book_data) {\n        return data.data.cell_view.book_data;\n    }\n    return [];\n}\n\nif (baseUrl.endsWith(\"bookshelf\")) {\n    result = getShelf(\"bookshelf/info\")\n} else if(/read_history/.test(baseUrl)) {\n    bid = getBookIdFull(result);\n    id_list = splitArray(bid, 200);\n    let urls = [];\n    id_list.forEach(i => {\n        urls.push(getApi() + \"fq_details/?book_id=\" + i.join(\",\"))\n    });\n    let resp = {book_info: []}\n    urls.forEach(r => {\n        resp.book_info = resp.book_info.concat(JSON.parse(java.ajax(r)).data)\n    })\n    result = resp;\n} else {\n    let w = baseUrl.split(\"/\")\n    if (baseUrl.includes(\"groupName\")) {\n        result = getByGroupName(w[w.length - 1])\n    } else if (baseUrl.includes(\"tab\")) {\n        result = getByTabIndex(parseInt(w[w.length - 1]))\n    } else {\n        result = JSON.parse(result)\n        if (result.data && result.data.data) {\n            result = {book_info: result.data.data}\n        }\n    }\n}\n\nlet normalizedData = normalizeResponse(result);\nJSON.stringify({data: normalizedData})\n</js>\n$.data[*]",
      "bookUrl": "{{getHost()}}detail?book_id={{$..book_id||$.bookId}}&source=番茄&key={{getSecretKey()}}&ts=\n<js>\nr=result\nvar variable = source.getVariable();\nif (!variable || variable === \"\") {\n    var defaultConfig = JSON.stringify({\n        source: \"聚合\",\n        tag: \"小说\",\n        mode: \"default\",\n        forceListen: false,\n        voice: \"default\"\n    });\n    source.setVariable(defaultConfig);\n    variable = defaultConfig;\n}\nvar config = {};\ntry {\n    config = JSON.parse(variable);\n} catch(e) {\n    // 解析失败则使用默认值\n    config = {\n        source: \"聚合\",\n        tag: \"小说\",\n        forceListen: false\n    };\n}\nfunction fetchSourceTags() {\n    try {\n        var key = getSecretKey();\n        var url = getHost() + \"sources?key=\" + key;\n        var response = java.ajax(url);\n        var data = JSON.parse(response);\n        \n        if (data.c === 200) {\n            var sources = data.data.sources;\n            var sourceTags = {};\n            var allTags = new Set();\n            var sourceIds = [\"聚合\"]; \n            for (var i = 0; i < sources.length; i++) {\n                var src = sources[i];\n                var tags = [\"小说\"]; \n                \n                if (src.supported_types && src.supported_types.length > 0) {\n                    tags = src.supported_types;\n                }\n                for (var j = 0; j < tags.length; j++) {\n                    allTags.add(tags[j]);\n                }\n                \n                sourceTags[src.id] = tags;\n                sourceIds.push(src.id); \n            }\n            sourceTags[\"聚合\"] = Array.from(allTags);\n            \n            return {\n                success: true,\n                sourceTags: sourceTags,\n                sourceIds: sourceIds,\n                allTags: Array.from(allTags)\n            };\n        }\n    } catch(e) {\n        java.log(\"从云端获取源模式失败: \" + e);\n    }\n    \n    return {\n        success: false,\n        sourceTags: {},\n        sourceIds: [\"聚合\"],\n        allTags: [\"小说\"]\n    };\n}\njava.put(\"ts\",config.tag)\nr=r+config.tag\nr;\n</js>",
      "coverUrl": "$..audio_thumb_uri||$..thumb_url||$..thumbUri##(\\d+)-tt##6-novel",
      "intro": "$..abstract##\\n",
      "kind": "{{$.category}}\n男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "$..lastChapterTitle||$..last_chapter_title",
      "name": "$.book_name||$.bookName",
      "wordCount": "$..word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$.data.li[*]",
      "bookUrl": "{{getHost()}}detail?book_id={{$.book_id}}&source={{$.source}}&key={{getSecretKey()}}&ts={{java.get(\"ts\")}}",
      "coverUrl": "cover",
      "intro": "text",
      "kind": "kind",
      "name": "book_name"
    },
    "ruleToc": {
      "chapterList": "<js>\ninfo = JSON.parse(result).data\nvar ts = java.get(\"ts\"); \nvar variable = source.getVariable();\njava.log(variable);\nvar params = JSON.parse(variable);\nvar forceListen = params.forceListen;\n     if (ts == \"小说\" || ts == \"短剧\" || ts == \"番剧\") {\n          if (forceListen) {\n            book.type= 32; \n        } else {\n            book.type= 8; \n        }\n    }    \n    else if (ts == \"漫画\") {\n        book.type= 64; \n    } else if (ts == \"听书\") {\n        book.type= 32; \n    }   \n    else {        \n        book.type= 8;\n    }\n\nr=JSON.stringify(info.chapters);\n</js>\n$[*]",
      "chapterName": "$.title\n@js:java.put('title', result);",
      "chapterUrl": "chapter_id\n@js:\nresult=`data:;base64,${java.base64Encode(result)},{\"type\":\"蛋蛋聚合\"}`",
      "preUpdateJs": "java.refreshTocUrl()",
      "updateTime": "{{$.vol}} | {{$.update_time}}"
    },
    "searchUrl": "<js>\nvar variable = source.getVariable();\nif (!variable || variable === \"\") {\n    var defaultConfig = JSON.stringify({\n        source: \"聚合\",\n        tag: \"小说\",\n        mode: \"default\",\n        forceListen: false,\n        voice: \"default\"\n    });\n    source.setVariable(defaultConfig);\n    variable = defaultConfig;\n}\nvar config = {};\ntry {\n    config = JSON.parse(variable);\n} catch(e) {\n    // 解析失败则使用默认值\n    config = {\n        source: \"聚合\",\n        tag: \"小说\",\n        forceListen: false\n    };\n}\nfunction fetchSourceTags() {\n    try {\n        var key = getSecretKey();\n        var url = getHost() + \"sources?key=\" + key;\n        var response = java.ajax(url);\n        var data = JSON.parse(response);\n        \n        if (data.c === 200) {\n            var sources = data.data.sources;\n            var sourceTags = {};\n            var allTags = new Set();\n            var sourceIds = [\"聚合\"]; \n            for (var i = 0; i < sources.length; i++) {\n                var src = sources[i];\n                var tags = [\"小说\"]; \n                \n                if (src.supported_types && src.supported_types.length > 0) {\n                    tags = src.supported_types;\n                }\n                for (var j = 0; j < tags.length; j++) {\n                    allTags.add(tags[j]);\n                }\n                \n                sourceTags[src.id] = tags;\n                sourceIds.push(src.id); \n            }\n            sourceTags[\"聚合\"] = Array.from(allTags);\n            \n            return {\n                success: true,\n                sourceTags: sourceTags,\n                sourceIds: sourceIds,\n                allTags: Array.from(allTags)\n            };\n        }\n    } catch(e) {\n        java.log(\"从云端获取源模式失败: \" + e);\n    }\n    \n    return {\n        success: false,\n        sourceTags: {},\n        sourceIds: [\"聚合\"],\n        allTags: [\"小说\"]\n    };\n}\nfunction processKey(inputKey) {\n    var tagResult = fetchSourceTags();\n    var sourceIds = tagResult.sourceIds;\n    var modes = tagResult.allTags;\n    var pattern = /@([^@]+)/g;  \n    var cleanKey = inputKey;\n    var foundSource = null;\n    var foundMode = null;\n    \n    var match;\n    while ((match = pattern.exec(inputKey)) !== null) {\n        var tagValue = match[1].trim();\n        if (tagValue.includes(\",\")) {\n            var parts = tagValue.split(\",\");\n            if (parts.length >= 2) {\n                var sourcePart = parts[0].trim();\n                var modePart = parts[1].trim();                              \n                if (sourceIds.includes(sourcePart)) {\n                    foundSource = sourcePart;\n                }                                \n                if (modes.includes(modePart)) {\n                    foundMode = modePart;\n                }\n            }\n        } \n     \n        else if (sourceIds.includes(tagValue)) {\n            foundSource = tagValue;\n        }\n       \n        else if (modes.includes(tagValue)) {\n            foundMode = tagValue;\n        }\n        cleanKey = cleanKey.replace(match[0], '');\n    }\n    \n    \n    cleanKey = cleanKey.trim();\n    \n    return {\n        text: cleanKey,\n        source: foundSource || config.source, \n        type: foundMode || config.tag \n    };\n}\nvar result = processKey(key);\nvar key = result.text;\nvar ts = result.type; \nvar selectedSource = result.source; \nvar SecretKey = getSecretKey();\nvar Host = getHost();\njava.log(\"处理后的关键词: \" + key);\njava.log(\"使用的模式: \" + ts);\njava.log(\"使用的来源: \" + selectedSource);\njava.put(\"ts\",ts)\nvar url = Host + \"search?query=\" + encodeURIComponent(key) + \n          \"&key=\" + SecretKey + \n          \"&ts=\" + encodeURIComponent(ts) + \n          \"&source=\" + encodeURIComponent(selectedSource)+\"&page=\"+page;\nurl;</js>",
    "weight": 0
  }
]