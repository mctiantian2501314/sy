[
  {
    "bookSourceComment": "版本: 20250913\n作者: 知秋\n1. 使用服务器进行中转，不需要挂梯子，但是注意账号id会保存服务器中，点击退出登录自行删除。\n2. 临时token口令为 天一团队是倒狗(qq为1070240776和845646066和1484608559)请勿相信任何需要付费的说法欢迎来官方反馈群举报\n3. 共享服务器超时请自行切换\n4. 文件域名一般为0，无需切换\n5. 获取token请点击登录界面，获取token按钮，点击测试/修改token可查询日下载量，切记获取token后请保存，最后选择√存储成功，token为3日有效期，到期请重新获取，切记token变为明文，请勿外泄，异地登录多次会封禁token。(token改为明文存源变量中防止丢失)\n6. 共享数据库如有，则优先使用数据库，会员章节开头的图标为🍐，免费章节为目录字数右边为🍐\n7. 下载请把预下载改成0-3之间，请求有超限拉黑，请勿大规模批量下载\n8. 未登录时，将使用共享会员账号进行请求（若共享服务器端开启了此功能，也可以加群私聊我提供会员账号进行共享）\n9. 已登录时，切换共享api接口后，如需使用自己账号的会员，需要重新登录\n10. 搜索小说：直接搜；\n      搜索漫画：以字母c开头；\n      搜索有声：以字母a开头；\n11. 反馈q群：755947375，token问题群里找我，或者社区找也行(社区不经常在线，上线看到会回)\n12. 接口请求速率存在限制，故设置并发率，批量下载耐心等待",
    "bookSourceName": "✿UAA三合一（知秋）✿",
    "bookSourceType": 0,
    "bookSourceUrl": "UAA三合一＃知秋",
    "concurrentRate": "1000",
    "customOrder": -1,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet token = String(source.getVariable())\nif (token == '') {\n  java.longToast('\\n❌未获取共享Token，请于登录界面获取共享Token后使用')\n}\n\nlet sort = []\nlet path = ''\nlet order = String(source.get('order'))\nlet push = (title, query, layout) => sort.push({\n  title: title,\n  url: query ? `@js:getApiUrl('${path}', {${query},page:page,size:20${order ? `,order:${order}` : ''}})` : '',\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: query ? layout || 0.25 : 1\n  }\n})\n\npush('🟥    🟥    🟥      共享服      🟥    🟥    🟥')\npath = '/novel/novels'\npush('小说·共享章节数量', \"sort:'chapCount'\", 0.4)\npush('小说·共享章节字数', \"sort:'charCount'\", 0.4)\npush('小说·共享更新时间', \"sort:'updateTime'\", 0.4)\npush('小说·共享上传时间', \"sort:'uploadTime'\", 0.4)\npath = '/comic/novels'\npush('漫画·共享章节数量', \"sort:'chapCount'\", 0.4)\npush('漫画·共享图片数量', \"sort:'imageCount'\", 0.4)\npush('漫画·共享更新时间', \"sort:'updateTime'\", 0.4)\npush('漫画·共享上传时间', \"sort:'uploadTime'\", 0.4)\npath = '/audio/novels'\npush('有声·共享章节数量', \"sort:'chapCount'\", 0.4)\npush('有声·共享更新时间', \"sort:'updateTime'\", 0.4)\npush('有声·共享上传时间', \"sort:'uploadTime'\", 0.4)\n\npath = '/novel/search'\npush('🟧    🟧    🟧      小说      🟧    🟧    🟧')\npush('🟠    时段    🟠')\npush('今日', \"period:1\")\npush('本周', \"period:2\")\npush('本月', \"period:3\")\npush('🟠    视角    🟠')\npush('男性视角', \"person:1\", 0.4)\npush('女性视角', \"person:2\", 0.4)\npush('第二人称', \"person:3\", 0.4)\npush('第三人称', \"person:4\", 0.4)\npush('🟠    肉量    🟠')\npush('少肉', \"porn:1\", 0.2)\npush('中肉', \"porn:2\", 0.2)\npush('多肉', \"porn:3\", 0.2)\npush('超多', \"porn:4\", 0.2)\npush('🟠    篇幅    🟠')\npush('短篇', \"space:1\")\npush('中篇', \"space:2\")\npush('长篇', \"space:3\")\npush('🟠    取向    🟠')\npush('直男', \"orientation:1\", 0.2)\npush('女主', \"orientation:2\", 0.2)\npush('男男', \"orientation:3\", 0.2)\npush('女女', \"orientation:4\", 0.2)\npush('🟠    评分    🟠')\npush('＞4', \"score:4\", 0.2)\npush('＞3', \"score:3\", 0.2)\npush('＞2', \"score:2\", 0.2)\npush('＞1', \"score:1\", 0.2)\npush('🟠    来源    🟠')\npush('原创首发', \"source:1\")\npush('会员上传', \"source:2\")\npush('🟠    状态    🟠')\npush('已完结', \"finished:1\")\npush('连载中', \"finished:'0'\")\npush('🟠    分类    🟠')\npush('都市', \"category:'都市'\")\npush('校园', \"category:'校园'\")\npush('乱伦', \"category:'乱伦'\")\npush('玄幻', \"category:'玄幻'\")\npush('系统', \"category:'系统'\")\npush('穿越', \"category:'穿越'\")\npush('武侠', \"category:'武侠'\")\npush('奇幻', \"category:'奇幻'\")\npush('乡村', \"category:'乡村'\")\npush('历史', \"category:'历史'\")\npush('明星', \"category:'明星'\")\npush('异能', \"category:'异能'\")\npush('科幻', \"category:'科幻'\")\npush('同人', \"category:'同人'\")\npush('🟠    标签    🟠')\npush('1v1', \"include_tags:'1v1'\")\npush('AI辅助', \"include_tags:'AI辅助'\")\npush('BE', \"include_tags:'BE'\")\npush('Futa', \"include_tags:'Futa'\")\npush('HE', \"include_tags:'HE'\")\npush('NP', \"include_tags:'NP'\")\npush('NTL', \"include_tags:'NTL'\")\npush('NTR', \"include_tags:'NTR'\")\npush('SC', \"include_tags:'SC'\")\npush('SM', \"include_tags:'SM'\")\npush('暗黑', \"include_tags:'暗黑'\")\npush('白虎', \"include_tags:'白虎'\")\npush('百合', \"include_tags:'百合'\")\npush('暴虐', \"include_tags:'暴虐'\")\npush('病娇', \"include_tags:'病娇'\")\npush('产奶', \"include_tags:'产奶'\")\npush('痴女', \"include_tags:'痴女'\")\npush('出轨', \"include_tags:'出轨'\")\npush('触手', \"include_tags:'触手'\")\npush('纯爱', \"include_tags:'纯爱'\")\npush('粗口', \"include_tags:'粗口'\")\npush('催眠', \"include_tags:'催眠'\")\npush('耽美', \"include_tags:'耽美'\")\npush('道具', \"include_tags:'道具'\")\npush('调教', \"include_tags:'调教'\")\npush('反差', \"include_tags:'反差'\")\npush('父女', \"include_tags:'父女'\")\npush('复仇', \"include_tags:'复仇'\")\npush('改造', \"include_tags:'改造'\")\npush('搞笑', \"include_tags:'搞笑'\")\npush('公媳', \"include_tags:'公媳'\")\npush('骨科', \"include_tags:'骨科'\")\npush('官场', \"include_tags:'官场'\")\npush('好文笔', \"include_tags:'好文笔'\")\npush('红帽', \"include_tags:'红帽'\")\npush('后宫', \"include_tags:'后宫'\")\npush('监禁', \"include_tags:'监禁'\")\npush('交换伴侣', \"include_tags:'交换伴侣'\")\npush('姐妹花', \"include_tags:'姐妹花'\")\npush('经典', \"include_tags:'经典'\")\npush('剧情', \"include_tags:'剧情'\")\npush('快穿', \"include_tags:'快穿'\")\npush('捆绑', \"include_tags:'捆绑'\")\npush('浪漫', \"include_tags:'浪漫'\")\npush('恋足', \"include_tags:'恋足'\")\npush('猎艳', \"include_tags:'猎艳'\")\npush('灵异', \"include_tags:'灵异'\")\npush('凌辱', \"include_tags:'凌辱'\")\npush('露出', \"include_tags:'露出'\")\npush('绿母', \"include_tags:'绿母'\")\npush('绿奴', \"include_tags:'绿奴'\")\npush('萝莉', \"include_tags:'萝莉'\")\npush('媚黑', \"include_tags:'媚黑'\")\npush('末世', \"include_tags:'末世'\")\npush('母女花', \"include_tags:'母女花'\")\npush('母子', \"include_tags:'母子'\")\npush('目前犯', \"include_tags:'目前犯'\")\npush('逆NTR', \"include_tags:'逆NTR'\")\npush('逆推', \"include_tags:'逆推'\")\npush('女性视角', \"include_tags:'女性视角'\")\npush('虐心', \"include_tags:'虐心'\")\npush('破处', \"include_tags:'破处'\")\npush('强奸', \"include_tags:'强奸'\")\npush('全家桶', \"include_tags:'全家桶'\")\npush('群交', \"include_tags:'群交'\")\npush('人妻', \"include_tags:'人妻'\")\npush('人兽', \"include_tags:'人兽'\")\npush('人妖', \"include_tags:'人妖'\")\npush('肉便器', \"include_tags:'肉便器'\")\npush('适合女生', \"include_tags:'适合女生'\")\npush('手枪文', \"include_tags:'手枪文'\")\npush('受孕', \"include_tags:'受孕'\")\npush('熟女', \"include_tags:'熟女'\")\npush('爽文', \"include_tags:'爽文'\")\npush('丝袜', \"include_tags:'丝袜'\")\npush('甜文', \"include_tags:'甜文'\")\npush('微肉', \"include_tags:'微肉'\")\npush('微重口', \"include_tags:'微重口'\")\npush('伪娘', \"include_tags:'伪娘'\")\npush('无绿', \"include_tags:'无绿'\")\npush('下克上', \"include_tags:'下克上'\")\npush('小马拉大车', \"include_tags:'小马拉大车'\")\npush('校花', \"include_tags:'校花'\")\npush('性奴', \"include_tags:'性奴'\")\npush('性转', \"include_tags:'性转'\")\npush('药物', \"include_tags:'药物'\")\npush('异国', \"include_tags:'异国'\")\npush('异世界', \"include_tags:'异世界'\")\npush('异种族', \"include_tags:'异种族'\")\npush('淫堕', \"include_tags:'淫堕'\")\npush('淫妻', \"include_tags:'淫妻'\")\npush('隐奸', \"include_tags:'隐奸'\")\npush('有父', \"include_tags:'有父'\")\npush('榨精', \"include_tags:'榨精'\")\npush('制服', \"include_tags:'制服'\")\npush('种马', \"include_tags:'种马'\")\npush('重口', \"include_tags:'重口'\")\npush('足交', \"include_tags:'足交'\")\n\npath = '/comic/search'\npush('🟨    🟨    🟨      漫画      🟨    🟨    🟨')\npush('🟡    地区    🟡')\npush('日漫', \"origin:1\")\npush('韩漫', \"origin:2\")\npush('🟡    色彩    🟡')\npush('黑白', \"color:1\")\npush('全彩', \"color:2\")\npush('🟡    篇幅    🟡')\npush('单话', \"space:3\")\npush('多话', \"space:1\")\npush('🟡    取向    🟡')\npush('直男', \"orientation:1\", 0.2)\npush('女主', \"orientation:2\", 0.2)\npush('男男', \"orientation:3\", 0.2)\npush('女女', \"orientation:4\", 0.2)\npush('🟡    评分    🟡')\npush('＞4', \"score:4\", 0.2)\npush('＞3', \"score:3\", 0.2)\npush('＞2', \"score:2\", 0.2)\npush('＞1', \"score:1\", 0.2)\npush('🟡    来源    🟡')\npush('原创首发', \"source:1\")\npush('会员上传', \"source:2\")\npush('🟡    状态    🟡')\npush('已完结', \"finished:1\")\npush('连载中', \"finished:'0'\")\npush('🟡    分类    🟡')\npush('短篇', \"category:'短篇'\")\npush('单本', \"category:'单本'\")\npush('同人', \"category:'同人'\")\npush('剧情', \"category:'剧情'\")\npush('校园', \"category:'校园'\")\npush('爱情', \"category:'爱情'\")\npush('BL', \"category:'BL'\")\npush('奇幻', \"category:'奇幻'\")\npush('调教', \"category:'调教'\")\npush('乱伦', \"category:'乱伦'\")\npush('🟡    标签    🟡')\npush('3P', \"include_tags:'3P'\")\npush('BL', \"include_tags:'BL'\")\npush('cosplay', \"include_tags:'cosplay'\")\npush('M男', \"include_tags:'M男'\")\npush('NTR', \"include_tags:'NTR'\")\npush('OL', \"include_tags:'OL'\")\npush('PUA', \"include_tags:'PUA'\")\npush('暗黑皮肤', \"include_tags:'暗黑皮肤'\")\npush('比基尼', \"include_tags:'比基尼'\")\npush('不伦', \"include_tags:'不伦'\")\npush('处女', \"include_tags:'处女'\")\npush('大屁股', \"include_tags:'大屁股'\")\npush('大阴茎', \"include_tags:'大阴茎'\")\npush('单男', \"include_tags:'单男'\")\npush('单女', \"include_tags:'单女'\")\npush('调教', \"include_tags:'调教'\")\npush('扶她futa', \"include_tags:'扶她futa'\")\npush('肛交', \"include_tags:'肛交'\")\npush('肛门', \"include_tags:'肛门'\")\npush('高潮潮吹', \"include_tags:'高潮潮吹'\")\npush('黑丝丝袜', \"include_tags:'黑丝丝袜'\")\npush('后宫', \"include_tags:'后宫'\")\npush('护士', \"include_tags:'护士'\")\npush('怀孕', \"include_tags:'怀孕'\")\npush('姐姐', \"include_tags:'姐姐'\")\npush('巨尻', \"include_tags:'巨尻'\")\npush('巨乳大奶', \"include_tags:'巨乳大奶'\")\npush('口交', \"include_tags:'口交'\")\npush('老师', \"include_tags:'老师'\")\npush('连裤袜', \"include_tags:'连裤袜'\")\npush('恋父', \"include_tags:'恋父'\")\npush('两穴同时插入', \"include_tags:'两穴同时插入'\")\npush('露出', \"include_tags:'露出'\")\npush('萝莉', \"include_tags:'萝莉'\")\npush('马尾辫', \"include_tags:'马尾辫'\")\npush('卖淫', \"include_tags:'卖淫'\")\npush('猫女', \"include_tags:'猫女'\")\npush('毛茸茸', \"include_tags:'毛茸茸'\")\npush('母亲', \"include_tags:'母亲'\")\npush('母乳', \"include_tags:'母乳'\")\npush('内射中出', \"include_tags:'内射中出'\")\npush('内衣', \"include_tags:'内衣'\")\npush('女教师', \"include_tags:'女教师'\")\npush('女仆', \"include_tags:'女仆'\")\npush('女同百合', \"include_tags:'女同百合'\")\npush('女学生', \"include_tags:'女学生'\")\npush('女学生制服', \"include_tags:'女学生制服'\")\npush('破处', \"include_tags:'破处'\")\npush('强奸', \"include_tags:'强奸'\")\npush('青年', \"include_tags:'青年'\")\npush('群P', \"include_tags:'群P'\")\npush('乳交', \"include_tags:'乳交'\")\npush('受精', \"include_tags:'受精'\")\npush('兽耳', \"include_tags:'兽耳'\")\npush('兽交', \"include_tags:'兽交'\")\npush('熟女人妻', \"include_tags:'熟女人妻'\")\npush('束缚', \"include_tags:'束缚'\")\npush('双性人', \"include_tags:'双性人'\")\npush('水手服', \"include_tags:'水手服'\")\npush('丝袜', \"include_tags:'丝袜'\")\npush('同性', \"include_tags:'同性'\")\npush('兔女郎', \"include_tags:'兔女郎'\")\npush('性玩具', \"include_tags:'性玩具'\")\npush('性转换', \"include_tags:'性转换'\")\npush('眼镜', \"include_tags:'眼镜'\")\npush('妖精', \"include_tags:'妖精'\")\npush('药娘伪娘', \"include_tags:'药娘伪娘'\")\npush('衣领', \"include_tags:'衣领'\")\npush('泳装', \"include_tags:'泳装'\")\npush('御姐女王', \"include_tags:'御姐女王'\")\npush('援交', \"include_tags:'援交'\")\npush('正太控', \"include_tags:'正太控'\")\npush('职场', \"include_tags:'职场'\")\npush('制服', \"include_tags:'制服'\")\npush('足交', \"include_tags:'足交'\")\npush('足控', \"include_tags:'足控'\")\n\npath = '/audio/search'\npush('🟪    🟪    🟪      有声书      🟪    🟪    🟪')\n// push('🟣    时长    🟣')\n// push('短篇', \"duration:1\")\n// push('中篇', \"duration:2\")\n// push('长篇', \"duration:3\")\npush('🟣    来源    🟣')\npush('原创首发', \"source:1\")\npush('会员上传', \"source:2\")\npush('🟣    状态    🟣')\npush('已完结', \"finished:1\")\npush('连载中', \"finished:'0'\")\npush('🟣    分类    🟣')\npush('有声小说', \"category:'有声小说'\", 0.4)\npush('淫词艳曲', \"category:'淫词艳曲'\", 0.4)\npush('激情骚麦', \"category:'激情骚麦'\", 0.4)\npush('寸止训练', \"category:'寸止训练'\", 0.4)\npush('ASMR', \"category:'ASMR'\", 0.4)\npush('🟣    标签    🟣')\npush('Futa', \"include_tags:'Futa'\")\npush('NP', \"include_tags:'NP'\")\npush('NTL', \"include_tags:'NTL'\")\npush('NTR', \"include_tags:'NTR'\")\npush('SM', \"include_tags:'SM'\")\npush('暗黑', \"include_tags:'暗黑'\")\npush('百合', \"include_tags:'百合'\")\npush('暴虐', \"include_tags:'暴虐'\")\npush('变装', \"include_tags:'变装'\")\npush('病娇', \"include_tags:'病娇'\")\npush('产奶', \"include_tags:'产奶'\")\npush('痴女', \"include_tags:'痴女'\")\npush('出轨', \"include_tags:'出轨'\")\npush('触手', \"include_tags:'触手'\")\npush('穿越重生', \"include_tags:'穿越重生'\")\npush('粗口', \"include_tags:'粗口'\")\npush('催眠', \"include_tags:'催眠'\")\npush('耽美', \"include_tags:'耽美'\")\npush('道具', \"include_tags:'道具'\")\npush('调教', \"include_tags:'调教'\")\npush('东方玄幻', \"include_tags:'东方玄幻'\")\npush('都市激情', \"include_tags:'都市激情'\")\npush('多CV', \"include_tags:'多CV'\")\npush('反差', \"include_tags:'反差'\")\npush('方言', \"include_tags:'方言'\")\npush('父女', \"include_tags:'父女'\")\npush('复仇', \"include_tags:'复仇'\")\npush('改造', \"include_tags:'改造'\")\npush('搞笑', \"include_tags:'搞笑'\")\npush('公媳', \"include_tags:'公媳'\")\npush('狗血', \"include_tags:'狗血'\")\npush('骨科', \"include_tags:'骨科'\")\npush('官场', \"include_tags:'官场'\")\npush('后宫', \"include_tags:'后宫'\")\npush('夹子音', \"include_tags:'夹子音'\")\npush('家庭乱伦', \"include_tags:'家庭乱伦'\")\npush('监禁', \"include_tags:'监禁'\")\npush('交换伴侣', \"include_tags:'交换伴侣'\")\npush('姐妹花', \"include_tags:'姐妹花'\")\npush('经典', \"include_tags:'经典'\")\npush('经典武侠', \"include_tags:'经典武侠'\")\npush('剧情', \"include_tags:'剧情'\")\npush('科学幻想', \"include_tags:'科学幻想'\")\npush('快穿', \"include_tags:'快穿'\")\npush('扩张', \"include_tags:'扩张'\")\npush('历史演义', \"include_tags:'历史演义'\")\npush('恋足', \"include_tags:'恋足'\")\npush('猎艳', \"include_tags:'猎艳'\")\npush('灵异', \"include_tags:'灵异'\")\npush('凌辱', \"include_tags:'凌辱'\")\npush('露出', \"include_tags:'露出'\")\npush('绿母', \"include_tags:'绿母'\")\npush('萝莉', \"include_tags:'萝莉'\")\npush('媚黑', \"include_tags:'媚黑'\")\npush('末世', \"include_tags:'末世'\")\npush('母女花', \"include_tags:'母女花'\")\npush('母子', \"include_tags:'母子'\")\npush('目前犯', \"include_tags:'目前犯'\")\npush('逆推', \"include_tags:'逆推'\")\npush('女性视角', \"include_tags:'女性视角'\")\npush('虐心', \"include_tags:'虐心'\")\npush('虐主', \"include_tags:'虐主'\")\npush('强奸', \"include_tags:'强奸'\")\npush('全家桶', \"include_tags:'全家桶'\")\npush('群交', \"include_tags:'群交'\")\npush('人妻', \"include_tags:'人妻'\")\npush('人兽', \"include_tags:'人兽'\")\npush('人妖', \"include_tags:'人妖'\")\npush('肉便器', \"include_tags:'肉便器'\")\npush('适合女生', \"include_tags:'适合女生'\")\npush('受孕', \"include_tags:'受孕'\")\npush('熟女', \"include_tags:'熟女'\")\npush('丝袜', \"include_tags:'丝袜'\")\npush('同人改编', \"include_tags:'同人改编'\")\npush('伪娘', \"include_tags:'伪娘'\")\npush('无绿', \"include_tags:'无绿'\")\npush('西方魔幻', \"include_tags:'西方魔幻'\")\npush('系统异能', \"include_tags:'系统异能'\")\npush('乡村爱情', \"include_tags:'乡村爱情'\")\npush('小马拉大车', \"include_tags:'小马拉大车'\")\npush('校花', \"include_tags:'校花'\")\npush('校园春色', \"include_tags:'校园春色'\")\npush('性奴', \"include_tags:'性奴'\")\npush('性转', \"include_tags:'性转'\")\npush('烟嗓', \"include_tags:'烟嗓'\")\npush('药物', \"include_tags:'药物'\")\npush('异国', \"include_tags:'异国'\")\npush('异世界', \"include_tags:'异世界'\")\npush('淫堕', \"include_tags:'淫堕'\")\npush('娱乐明星', \"include_tags:'娱乐明星'\")\npush('御姐音', \"include_tags:'御姐音'\")\npush('榨精', \"include_tags:'榨精'\")\npush('制服', \"include_tags:'制服'\")\npush('种马', \"include_tags:'种马'\")\npush('种田', \"include_tags:'种田'\")\npush('重口', \"include_tags:'重口'\")\npush('🟣    CV    🟣')\npush('小苮儿', \"author:'小苮儿'\")\npush('曼曼', \"author:'曼曼'\")\npush('点心', \"author:'点心'\")\npush('小窈', \"author:'小窈'\")\npush('小咪', \"author:'小咪'\")\npush('戴逸', \"author:'戴逸'\")\npush('雅朵', \"author:'雅朵'\")\npush('小野猫', \"author:'小野猫'\")\npush('步非烟', \"author:'步非烟'\")\npush('小瑶', \"author:'小瑶'\")\npush('姽狐', \"author:'姽狐'\")\npush('芯媛', \"author:'芯媛'\")\npush('小美', \"author:'小美'\")\npush('浅浅', \"author:'浅浅'\")\npush('沙拉', \"author:'沙拉'\")\npush('萱妹', \"author:'萱妹'\")\npush('Rain', \"author:'Rain'\")\npush('南征', \"author:'南征'\")\npush('小筝', \"author:'小筝'\")\npush('小琳', \"author:'小琳'\")\npush('林三岁', \"author:'林三岁'\")\npush('叶倩彤', \"author:'叶倩彤'\")\npush('秋水', \"author:'秋水'\")\npush('Mini姐', \"author:'Mini姐'\")\npush('戴猫耳的大魔王', \"author:'戴猫耳的大魔王'\")\npush('源源', \"author:'源源'\")\npush('青梅', \"author:'青梅'\")\npush('嫣然', \"author:'嫣然'\")\npush('小爽', \"author:'小爽'\")\npush('大宝', \"author:'大宝'\")\npush('Rainnight.雨', \"author:'Rainnight.雨'\")\npush('小颦', \"author:'小颦'\")\npush('楪祈', \"author:'楪祈'\")\npush('小一熟了吗', \"author:'小一熟了吗'\")\npush('小晶晶软糖', \"author:'小晶晶软糖'\")\npush('李二狗', \"author:'李二狗'\")\npush('绝色', \"author:'绝色'\")\npush('梦瑶', \"author:'梦瑶'\")\npush('紫洛', \"author:'紫洛'\")\npush('小晴', \"author:'小晴'\")\npush('想睡觉', \"author:'想睡觉'\")\npush('宋恩', \"author:'宋恩'\")\npush('小优', \"author:'小优'\")\npush('墨白', \"author:'墨白'\")\npush('小媚', \"author:'小媚'\")\npush('魅惑', \"author:'魅惑'\")\npush('鹿梧', \"author:'鹿梧'\")\npush('偷听', \"author:'偷听'\")\npush('狐姬', \"author:'狐姬'\")\npush('柳瑶', \"author:'柳瑶'\")\n\n//小说·更新::@js:getApiUrl('/novel/novels',{sort:'updateTime',page:page,size:5})\n//最新上架::@js:getApiUrl('/novel/search',{order:1,page:page,size:5})\n//月榜::@js:getApiUrl('/comic/search',{type:2,page:page,size:5})\nJSON.stringify(sort)",
    "jsLib": "let api = 'https://uaa.vv9v.cn'\n\nfunction getApiUrl(path, data, _) {\n  let { source } = _ || this\n  let account_id = String(source.get('account_id')) || '0'\n  data.account_id = account_id\n  let hostIndex = String(source.get('hostIndex'))\n  if (hostIndex) {\n    data.hostIndex = hostIndex\n  }\n  data = Object.entries(data).map(v => v.join('=')).join('&')\n  let androidId = String(source.get('androidId'))\n  if (!androidId) {\n    androidId = _.java.androidId()\n    source.put('androidId', androidId)\n  }\n  let option = {\n    method: \"GET\", headers: {\n      'x-sec-token': source.getVariable(),\n      'x-android-id': androidId\n    }\n  }\n  let url = api + path + '?' + data + ',' + JSON.stringify(option)\n  return url\n}\n\nfunction requestApiUrl(path, data, _) {\n  let url = getApiUrl(path, data, _)\n  try {\n    let res = _.java.ajax(url)\n    res = JSON.parse(res)\n    if (res.error) {\n      _.java.longToast(`\\n操作失败，code${res.code}：\\n${res.error}`)\n    }\n    if (res.data) {\n      return res.data\n    }\n  } catch (e) {\n    _.java.log(`请求共享接口${path}异常：` + e.message)\n  }\n  return null\n}\n\nlet hosts = [\n  \"uaa010.com\",\n  \"uameta.ai\",\n  \"uaa.com\",\n  \"uaa202410.com\",\n].map(v => 'https://cdn.' + v + '/file/bucket-media')\n\nfunction getHost(_) {\n  let { source } = _ || this\n  let host = source.get('host')\n  if (host == '') {\n    return hosts[0]\n  }\n  return host\n}\n\nfunction getFileUrl(path, _) {\n  let host = getHost(_)\n  let option = {\n    method: \"GET\",\n    headers: {\n      \"User-Agent\": \"Mozilla/5.0 (Linux; Android 15; V2304A Build/AP3A.240905.015.A2; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/132.0.6834.163 Mobile Safari/537.36\",\n      \"Referer\": \"uaa.com\"\n    }\n  }\n  let url = host + path + ',' + JSON.stringify(option)\n  return url\n}",
    "lastUpdateTime": 1757759896524,
    "loginUi": "[\n  {\n    \"name\": \"源作者\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"官方反馈群\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"临时Token口令\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"查询Token\",\n    \"type\": \"button\",\n    \"action\": \"queryToken()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"获取Token\",\n    \"type\": \"button\",\n    \"action\": \"getTempToken()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"数据统计\",\n    \"type\": \"button\",\n    \"action\": \"showDb()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"账号\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"密码\",\n    \"type\": \"password\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"登录\",\n    \"type\": \"button\",\n    \"action\": \"_login()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"退出登录\",\n    \"type\": \"button\",\n    \"action\": \"logout()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"账号信息\",\n    \"type\": \"button\",\n    \"action\": \"showUserInfo()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    'name': '⚙️ 发现页排序 ⚙️',\n    'type': 'button',\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    'name': '最新上架',\n    'type': 'button',\n    'action': \"changeOrder('最新上架')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  {\n    'name': '最近更新',\n    'type': 'button',\n    'action': \"changeOrder('最近更新')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  {\n    'name': '最多观看',\n    'type': 'button',\n    'action': \"changeOrder('最多观看')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  {\n    'name': '最多收藏',\n    'type': 'button',\n    'action': \"changeOrder('最多收藏')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  {\n    \"name\": \"⚙️ 共享api接口 ⚙️\",\n    \"type\": \"button\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"默认\",\n    \"type\": \"button\",\n    \"action\": \"changeHostIndex()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \" 0⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHostIndex(0)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \" 1⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHostIndex(1)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"⚙️ UAA文件域名 ⚙️\",\n    \"type\": \"button\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \" 0⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(0)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 1⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(1)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 2⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(2)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 3⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(3)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  }\n]",
    "loginUrl": "function login() {\n  let info = JSON.parse(String(source.getLoginInfo()))\n  _login(info)\n}\n\nfunction _login(info) {\n  let oriId = String(source.get('account_id'))\n  if (oriId !== '' && oriId !== '0') {\n    return java.longToast('\\n❌登录失败，当前已登录，请先退出登录')\n  }\n  info = info || result\n  java.log(JSON.stringify(info))\n  let username = info['账号']\n  let password = info['密码']\n  if (username == '' || password == '') {\n    return java.longToast('\\n❌登录失败，用户名或密码不能为空')\n  }\n  let data = requestApiUrl('/console/login', { username: username, password: password }, this)\n  if (!data || !data.id) return\n  let { id, nickName, vip } = data\n  source.put('account_id', id)\n  source.putLoginInfo(JSON.stringify(info))\n  java.longToast(`\\n✅登录成功：${nickName}\\nid：${id}\\n会员：${vip ? '是' : '否'}`)\n}\n\nfunction logout() {\n  source.put('account_id', '0')\n  java.longToast('\\n✅退出登录成功，将使用共享账号获取章节')\n}\n\nfunction showUserInfo() {\n  let account_id = String(source.get('account_id'))\n  if (!account_id || account_id == '0') {\n    return java.longToast('\\n❌查询失败，未登录账号')\n  }\n  let data = requestApiUrl('/console/info', { account_id: account_id }, this)\n  if (!data || !data.id) return\n  java.longToast(`\\n✅查询成功：${data.nickName}\\nid：${data.id}\\n会员：${data.isVip ? '是' : '否'}`)\n}\n\nfunction queryToken() {\n  let token = String(source.getVariable())\n  if (token.length <= 60) {\n    java.toast('请输入有效token')\n  } else {\n    let info = requestApiUrl('/user/test', { token: token }, this)\n    if (!info) return\n    source.setVariable(token)\n    java.longToast(`\\n✅查询成功\\n用户：${info.id}${info.max ? `\\n日下载上限：${info.max}` : ''}\\n今日已下载：${info.used}\\n日下载剩余：${info.left}\\n创建时间：${info.createTime}${info.ddl ? `\\n到期时间：${info.ddlTime}` : ''}`)\n    source.putLoginInfo(JSON.stringify(result))\n  }\n}\n\nfunction getTempToken() {\n  let pw1 = String(result['源作者'])\n  if (pw1 == '') {\n    return java.longToast('请输入源作者')\n  }\n  let pw2 = String(result['官方反馈群'])\n  if (pw2 == '') {\n    return java.longToast('请输入官方反馈群')\n  }\n  let pw3 = String(result['临时Token口令'])\n  if (pw3 == '') {\n    return java.longToast('请输入临时Token口令')\n  }\n  let info = requestApiUrl('/user/temp', { id: java.androidId(), pw1: pw1, pw2: pw2, pw3: pw3 }, this)\n  if (!info) return\n  let token = info.token\n  source.setVariable(token)\n  java.longToast(`\\n✅获取临时token成功\\n用户：${info.id}\\n日下载剩余：${info.left}\\n创建时间：${info.createTime}\\n到期时间：${info.ddlTime}`)\n  source.putLoginInfo(JSON.stringify(result))\n}\n\nfunction showDb() {\n  let data = requestApiUrl('/system/dbinfo', {}, this)\n  if (!data) return\n  java.longToast('\\n' + data.msg)\n}\n\nfunction changeOrder(type) {\n  let order = ''\n  if (type == '最新上架') {\n    order = \"1\"\n  } else if (type == '最近更新') {\n    order = \"2\"\n  } else if (type == '最多观看') {\n    order = \"3\"\n  } else if (type == '最多收藏') {\n    order = \"4\"\n  }\n  source.put('order', order)\n  java.longToast('\\n✅发现页排序已切换为：' + (type || '默认'))\n}\n\nfunction changeHostIndex(index) {\n  if (!index && index !== 0) {\n    source.put('hostIndex', '')\n    java.longToast('共享api接口已切换为：默认')\n  } else {\n    source.put('hostIndex', index + '')\n    java.longToast('共享api接口已切换为：' + index)\n    let data = requestApiUrl('/system/hostping', { hostIndex: index }, this)\n    if (!data) return\n    java.longToast(`\\n接口状态：${data.isAvailable ? '可用' : '不可用'}\\n延迟：${data.latency}ms\\n质量：${data.rating}`)\n  }\n}\n\nfunction changeHost(index) {\n  if (index < 0 || index >= hosts.length) {\n    throw new Error('Invalid host index')\n  }\n  let host = hosts[index]\n  source.put('host', host)\n  java.longToast('UAA文件域名切换为：\\n【' + index + '】' + host)\n  try {\n    let date1 = Date.now()\n    let html = java.get(host + 'image/cover/41559536e3e74e0f99f46ff70446cf8b.webp', { 'user-agent': 'Mozilla/5.0 (Linux; Android 15; V2304A Build/AP3A.240905.015.A2; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/132.0.6834.163 Mobile Safari/537.36', \"referer\": \"uaa.com\" })\n    let code = html.statusCode()\n    let date2 = Date.now()\n    let t = date2 - date1\n    let time = t / 1000 + 's'\n    let logTime = '【' + index + '】' + '解析时间：' + time\n\n    if (code < 200 || code >= 400 || t > 5000) {\n      java.longToast('\\n【访问失败' + code + '】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n' + logTime + '\\n♣️访问失败，可能被墙♣️\\n请切换域名/切换网络环境\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t < 1000) {\n      java.longToast('\\n【速度优良】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n' + logTime + '\\n❤️延迟较低，推荐使用❤️\\n网络环境优良，请继续保持状态\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 1000 && t < 2000) {\n      java.longToast('\\n【速度一般】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n' + logTime + '\\n♦️延迟一般，勉强使用♦️\\n可尝试其他域名或切换网络环境\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 2000 && t < 5000) {\n      java.longToast('\\n【速度堪忧】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n' + logTime + '\\n♣️延迟过高，不建议使用♣️\\n请切换其他域名或切换网络环境\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    }\n  } catch (err) {\n    java.toast('\\n💔访问出错，请换接口💔')\n  }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "data.authors",
      "coverUrl": "data.cover\n@js:\ngetFileUrl(result, this)",
      "intro": "data.brief",
      "kind": "{{java.getString('finished') == '1' ? '完本' : '连载'}}\n{{$.data.categories}}\n{{$.data.tags}}",
      "lastChapter": "data.latestUpdate",
      "name": "data.title",
      "tocUrl": "data.id\n@js:\n`data:;base64,${java.base64Encode(result)},{\"type\":\"${baseUrl.includes('/novel/') ? 'novel' : baseUrl.includes('/comic/') ? 'comic' : 'audio'}\"}`",
      "wordCount": "data.wordCountFormat"
    },
    "ruleContent": {
      "content": "@js:\nlet chapId = java.hexDecodeToString(result)\nlet info = JSON.parse(baseUrl.slice(baseUrl.indexOf('{')))\nlet type = info.type\nlet novelId = info.novelId\nlet data = requestApiUrl(`/${type}/chap`, { novelId: novelId, chapId: chapId }, this)\n\nif (type == 'novel') {\n  data.content\n} else if (type == 'comic') {\n  data.originalImages.map(x => `<img src=\"${getFileUrl(x, this)}\">`).join('\\n')\n} else if (type == 'audio') {\n  getFileUrl(data.originUrl, this)\n}",
      "imageStyle": "FULL"
    },
    "ruleExplore": {
      "author": "authors",
      "bookList": "data.novels[*]||data.data[*]",
      "bookUrl": "id\n@js:\nlet type = baseUrl.includes('/novel/') ? 'novel' : baseUrl.includes('/comic/') ? 'comic' : 'audio'\ngetApiUrl(`/${type}/info`, { novelId: result })",
      "coverUrl": "cover\n@js:\ngetFileUrl(result, this)",
      "intro": "brief",
      "kind": "{{java.getString('finished') == '1' ? '完本' : '连载'}}\n{{$.categories}}\n{{$.tags}}",
      "lastChapter": "latestUpdate",
      "name": "title",
      "wordCount": "wordCountFormat"
    },
    "ruleSearch": {
      "author": "authors",
      "bookList": "data.data[*]",
      "bookUrl": "id\n@js:\nlet type = baseUrl.includes('/novel/') ? 'novel' : baseUrl.includes('/comic/') ? 'comic' : 'audio'\ngetApiUrl(`/${type}/info`, { novelId: result })",
      "checkKeyWord": "变身",
      "coverUrl": "cover\n@js:\ngetFileUrl(result, this)",
      "intro": "brief",
      "kind": "{{java.getString('finished') == '1' ? '完本' : '连载'}}\n{{$.data.categories}}\n{{$.data.tags}}",
      "lastChapter": "latestUpdate",
      "name": "title",
      "wordCount": "wordCountFormat"
    },
    "ruleToc": {
      "chapterList": "@js:\nlet novelId = java.hexDecodeToString(result)\nlet type = JSON.parse(baseUrl.slice(baseUrl.indexOf('{'))).type\nresult = requestApiUrl(`/${type}/catalog`, { novelId: novelId }, this)\nlet menus = Array.from(result.menus)\n\nlet cache = requestApiUrl(`/${type}/cache`, { novelId: novelId }, this) || []\ncache = cache.reduce((acc, d) => {\n  acc[d.chapId] = d\n  return acc\n}, {})\n\nfunction formatTime(time) {\n  return new Date(time).toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  })\n}\n\nfunction formatMenus(menus) {\n  menus.forEach(c => {\n    let cacheChap = cache[c.id]\n    let isShare = !!cacheChap\n    let tag = isShare ? '🥑' : ''\n    let info = ''\n    let onlineTime = cacheChap ? cacheChap.onlineTime : formatTime(c.onlineTime)\n    if (type == 'novel') {\n      info = `${onlineTime} ┃ 字数：${c.volumeNum || 0}`\n    } else if (type == 'comic') {\n      info = `${onlineTime}${cacheChap ? ` ┃ 图片数：${cacheChap.imageCount || 0}` : ''}`\n    } else {\n      if (cacheChap) {\n        info = `${onlineTime}${cacheChap.duration ? ` ┃ 时长：${cacheChap.durationFormat}` : ''}`\n      } else {\n        info = onlineTime\n      }\n    }\n    let isVip = c.limit != '游客' && c.limit != '注册会员'\n    chaps.push({\n      title: isVip ? tag + c.title : c.title,\n      info: info + tag,\n      isVip: !isShare && isVip,\n      // url: getApiUrl(`/${type}/chap`, { novelId: novelId, chapId: c.id })\n      url: `data:;base64,${java.base64Encode(c.id)},{\"type\":\"${type}\",\"novelId\":\"${novelId}\"}`\n    })\n  })\n}\n\nlet chaps = []\nif (type == 'novel') {\n  book.type = 8\n  menus.forEach(v => {\n    chaps.push({\n      title: v.title,\n      voltype: true\n    })\n    formatMenus(v.children)\n  })\n} else if (type == 'comic') {\n  book.type = 64\n  formatMenus(menus)\n} else if (type == 'audio') {\n  book.type = 32\n  formatMenus(menus)\n}\nchaps",
      "chapterName": "title",
      "chapterUrl": "url",
      "isVip": "isVip",
      "isVolume": "voltype",
      "updateTime": "info"
    },
    "searchUrl": "@js:\nlet type = 'novel'\nif (key.startsWith('c') || key.startsWith('C')) {\n  type = 'comic'\n  key = key.slice(1)\n} else if (key.startsWith('a') || key.startsWith('A')) {\n  type = 'audio'\n  key = key.slice(1)\n}\ngetApiUrl(`/${type}/search`, { keyword: key, page: page, size: 20 })",
    "weight": 0
  },
  {
    "bookSourceComment": "版本: 20250909\n作者: 知秋\n1. 除发现使用官方接口外，其余优先使用源作者服务器中转\n2. 共享服务器连接超时，请自行切换服务器\n3. 请选择一个域名接口连接，否则无法使用\n4. 临时token口令为 天一团队是倒狗(qq为1070240776和845646066和1484608559)请勿相信任何需要付费的说法欢迎来官方反馈群举报\n5. 获取token请点击登录界面，获取token按钮，点击测试/修改token可查询日下载量，切记获取token后请保存，token为3日有效期，到期请重新获取，token为明文请自行保存，请勿外传，异地登录多次会封禁token(token改为明文存源变量中防止丢失)\n6. 如爱丽丝域名无法直连，请打开梯子使用\n7. 共享数据库如有，则优先使用数据库，章节开头的图标为🍐\n8. 下载请把预下载改成0-3之间，请求有超限拉黑，请勿大规模批量下载\n9. 修复图片问题，新增正确封面\n10. 反馈q群：755947375，token问题群里找我，或者社区找也行(社区不经常在线，上线看到会回)\n11. 接口请求速率存在限制，故设置并发率，批量下载耐心等待",
    "bookSourceName": "✿爱丽丝书屋（知秋）✿",
    "bookSourceType": 0,
    "bookSourceUrl": "爱丽丝书屋＃知秋",
    "concurrentRate": "1/1500",
    "customOrder": 12,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet sort = []\nlet push = (title, url, type1, type2) => sort.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: type1,\n    layout_flexBasisPercent: type2\n  }\n})\n\npush('∇    共享服    ∇', '', 1, 1)\npush('章节数', \"@js:getApiUrl('/novels',{sort:'chapCount',page:page,size:15})\", 1, 0.25)\npush('更新时间', \"@js:getApiUrl('/novels',{sort:'updateTime',page:page,size:15})\", 1, 0.25)\npush('上传时间', \"@js:getApiUrl('/novels',{sort:'createTime',page:page,size:15})\", 1, 0.25)\n\nlet url = ''\nlet pxo = source.get('pxo')\n\npush(\"∇     排行     ∇\", null, 1, 1)\nlet xrList = [[\"总排行\", \"hits\"], [\"本日排行\", \"hits_day\"], [\"本周排行\", \"hits_week\"], [\"本月排行\", \"hits_month\"]]\nxrList.map(([title, uri]) => {\n  url = `{{source.get('host')}}/other/rank_hits/order/${uri}.html`\n  push(title, url, 1, 0.25)\n})\n\npush(\"∇    全部分类    ∇\", null, 1, 1)\nlet mrList = [[\"更新\", \"update_time\"], [\"人气\", \"hits\"], [\"字数\", \"word\"]]\nmrList.map(([tog, uri]) => {\n  push(tog, `{{source.get('host')}}/all/order/${uri}+desc.html<,?page={{page+1}}>`, 1, 0.25)\n})\n\npush(\"∇     分类     ∇\", null, 1, 1)\nlet arList = [[\"校园\", \"61\"], [\"贤者小说\", \"79\"], [\"玄幻\", \"62\"], [\"奇幻\", \"75\"], [\"强奸\", \"74\"], [\"同人\", \"73\"], [\"科幻\", \"71\"], [\"乡村\", \"63\"], [\"都市\", \"64\"], [\"系统\", \"69\"], [\"武侠\", \"68\"], [\"历史\", \"67\"], [\"明星\", \"72\"], [\"乱伦\", \"65\"], [\"穿越\", \"70\"], [\"凌辱\", \"46\"], [\"反差\", \"22\"], [\"堕落\", \"18\"], [\"纯爱\", \"19\"], [\"伪娘\", \"52\"], [\"性奴\", \"45\"], [\"萝莉\", \"48\"], [\"熟女\", \"56\"], [\"禁忌\", \"51\"], [\"NTR\", \"54\"], [\"媚黑\", \"53\"], [\"绿帽\", \"55\"], [\"调教\", \"58\"], [\"女主\", \"59\"], [\"正太\", \"50\"], [\"下克上\", \"43\"], [\"反转\", \"23\"], [\"羞耻\", \"34\"], [\"百合\", \"47\"], [\"重口\", \"21\"], [\"其他\", \"57\"]]\narList.map(([title, uri]) => {\n  if (pxo == \"\") {\n    url = `{{source.get('host')}}/lists/${uri}.html<,?page={{page+1}}>`\n  } else {\n    url = `{{source.get('host')}}/all/id/${uri}/order/${pxo}+desc.html<,?page={{page+1}}>`\n  }\n  push(title, url, 1, 0.25)\n})\n\npush(\"∇     标签     ∇\", null, 1, 1)\nlet orList = [\"1v1\", \"AI辅助\", \"BE\", \"Futa\", \"HE\", \"NP\", \"NTL\", \"NTR\", \"ntr\", \"SC\", \"SM\", \"暗黑\", \"白虎\", \"百合\", \"暴虐\", \"病娇\", \"产奶\", \"痴女\", \"出轨\", \"触手\", \"纯爱\", \"粗口\", \"催眠\", \"耽美\", \"道具\", \"调教\", \"反差\", \"父女\", \"复仇\", \"改造\", \"搞笑\", \"公媳\", \"官场\", \"好文笔\", \"红帽\", \"后宫\", \"监禁\", \"交换伴侣\", \"经典\", \"剧情\", \"快穿\", \"捆绑\", \"恋足癖\", \"猎艳\", \"灵异\", \"凌辱\", \"露出\", \"绿母\", \"绿奴\", \"萝莉\", \"媚黑\", \"末世\", \"母女花\", \"母子\", \"目前犯\", \"逆NTR\", \"女性视角\", \"虐心\", \"破处\", \"强奸\", \"全家桶\", \"群交\", \"人妻\", \"人兽\", \"人妖\", \"肉便器\", \"适合女生\", \"手枪文\", \"受孕\", \"熟女\", \"爽文\", \"丝袜\", \"甜文\", \"微肉\", \"微重口\", \"伪娘\", \"无绿\", \"下克上\", \"小马拉大车\", \"性奴\", \"性转\", \"药物\", \"异国\", \"异世界\", \"异种族\", \"淫堕\", \"淫妻\", \"隐奸\", \"榨精\", \"制服\", \"种马\", \"重口\", \"足交\", \"同人\", \"穿越\", \"系统\", \"变态\", \"小穴\", \"恶堕\", \"二次创作\", \"精液\", \"肛交\", \"屁眼\", \"奶子\", \"深喉\", \"抽插\", \"幼女\", \"常识修改\", \"精神控制\", \"乱伦\", \"肛门\", \"纯爱无绿\", \"兄妹\", \"妈妈\", \"小姨\", \"姐弟\", \"兄弟\", \"白领\", \"公交车\", \"日记\", \"恋爱\", \"口交\", \"小恶魔系女友\", \"裸体\", \"围裙\", \"服侍\", \"性交\", \"无套插入\", \"中出\", \"名器\", \"高跟鞋\", \"少妇\", \"空姐\", \"轮奸\", \"乳交\", \"变性\", \"第一人称\", \"怀孕\", \"R18\", \"R-18\", \"小说\", \"绿帽\", \"多P\", \"淫荡\", \"寝取\", \"跳蛋\", \"母狗\", \"拘束\", \"紧缚\", \"绑架\", \"中国语\", \"女斗\", \"性斗\", \"sexfight\", \"レズバトル\", \"同一cp\", \"selfcest\", \"克隆斗\", \"乳斗\", \"catfight\", \"少女\", \"都市\", \"校园\", \"历史\", \"乡村\", \"科幻\", \"武侠\", \"明星\", \"奇幻\", \"女主\", \"禁忌\", \"上克下\", \"正太\", \"其他\", \"玄幻\", \"婚礼\", \"美腿\", \"榨乳\", \"自缚\", \"多肉\", \"年上\", \"强制\", \"侵犯\", \"高潮\", \"媚药\", \"催情\", \"颜射\", \"精液浴\", \"连续高潮\", \"强制高潮\", \"浴室\", \"漏尿\", \"自慰\", \"夹心三明治\", \"意识控制\", \"足控\", \"女王\", \"按摩\", \"精油\", \"春药\", \"仙女\", \"御姐\", \"乱交\", \"性奴隶\", \"仙侠\", \"修仙\", \"修真\", \"后入\", \"内射\", \"巨臀\", \"巨乳\", \"贵妇\", \"教师\", \"同学\", \"虐待\", \"BBC\", \"黑人\", \"潮吹\", \"骑乘位\", \"69式\", \"素股\", \"电击\", \"扩张\", \"肛珠\", \"双穴\", \"喷乳\", \"母乳\", \"饮尿\", \"放尿\", \"黄金\", \"圣水\", \"虫奸\", \"兽交\", \"丸吞\", \"肉体改造\", \"女体盛\", \"人体家具\", \"窒息\", \"冰火\", \"乳首责め\", \"尿道プレイ\", \"フィスト\", \"ディルド\", \"バイブ\", \"オナホ\", \"サイバー\", \"机械奸\", \"产卵\", \"寄生\", \"ASMR\", \"汗臭\", \"腋臭\", \"脚臭\", \"土下座\", \"便器\", \"饮精\", \"颜面骑乘\", \"スカトロ\", \"粪尿\", \"臭鼬\", \"放屁\", \"パンティ\", \"脱衣\", \"着衣\", \"透明\", \"薄纱\", \"网袜\", \"蕾丝\", \"皮革\", \"乳胶\", \"金属\", \"锁链\", \"穿刺\", \"烙印\", \"纹身\", \"人体彩绘\", \"直播\", \"汉服\", \"JK\", \"黑丝\", \"有父\", \"情感\", \"偷情\", \"浪漫\", \"妹妹\", \"破瓜\", \"开苞\", \"处女手交\", \"口爆吞精\", \"姐姐\", \"校花\", \"洋马\", \"肥臀\", \"精灵\", \"黑皮\", \"双穴发情\", \"隔丝\", \"公园\", \"舔菊\", \"揉躏\", \"爆肏\", \"精液溢出\", \"舔穴\", \"肉棒清理\", \"射颜\", \"泌乳\", \"勾引\", \"鸡巴套子\", \"泡芙\", \"揉乳\", \"驯化\", \"裤袜\", \"雌堕\", \"植物人\", \"睡眠姦\", \"净艳\", \"吾妻\", \"淫纹\", \"舌吻\", \"飞机杯\", \"包臀裙\", \"种付位\", \"女上位\", \"既堕\", \"吊带袜\", \"子宫高潮\", \"发交\", \"激烈性爱\", \"射鞋\", \"连体黑丝\", \"抖M\", \"舔脚\", \"裸足\", \"恋足\", \"碧蓝航线\", \"顶丝性交\", \"痴女唾液\", \"强制舔脚\", \"唾液交换\", \"淫乱乳靴\", \"气味癖\", \"强制高潮榨精\", \"兔女郎\", \"隔丝插入\", \"エーギル\", \"勇者\", \"巫女\", \"逆推\", \"治愈\", \"人外娘\", \"龙娘\", \"青梅竹马\", \"子宫插入\", \"爆射\", \"后背拉\", \"BDSM\", \"小説\", \"骨科\", \"兽娘\", \"古风\", \"ntrs\", \"高跟长靴\", \"暖绿\", \"夫目前犯\", \"东方\", \"轮流中出\", \"多视角\", \"寝取报告\", \"DID\", \"诱拐\", \"堵嘴\", \"拉致\", \"加料\", \"羞耻\", \"女奴\", \"堕落\", \"美母\", \"姐妹花\", \"体液\", \"血亲\", \"野种\", \"大车碾小孩\", \"闻臭癖\", \"tickling\", \"tk\", \"败北\", \"骑乘\", \"强迫\", \"臭脚\", \"论奸\", \"中文\", \"黄金圣水\", \"恋脚\", \"お尻叩き\", \"弱点\", \"弱点攻击\", \"龟头\", \"惩罚\", \"loli\", \"spank\", \"猫娘\", \"狗娘\", \"原创\", \"打屁股\", \"spanking\", \"sp\", \"打脚心\", \"全裸\", \"虐阴\", \"白丝\", \"白丝裤袜\", \"车震\", \"吸奶\", \"巨根伪娘正太\", \"连裤袜\", \"魔物娘\", \"R\", \"眠姦\", \"電話中\", \"中出し\", \"恋童癖\", \"恋物癖\", \"袜交\", \"腿交\", \"腋交\", \"手交\", \"胁迫\", \"幻想\", \"不挠\", \"女装\", \"巨根\", \"嘴臭\"]\norList.map((title, uri) => {\n  if (pxo == \"\") {\n    url = `{{source.get('host')}}/tag/${title}.html?tag=${title}&page={{page}}`\n  } else {\n    url = `{{source.get('host')}}/search.html?q=${title}&f=tag&sort=${pxo}_DESC<,&p={{page+1}}>&serialize=`\n  }\n  push(title, url, 1, 0.25)\n})\n//上传时间::@js:getApiUrl('/novels',{sort:'createTime',page:page,size:15})\n//人气::{{source.get('host')}}/all/order/hits+desc.html<,?page={{page+1}}>\n//本日排行::{{source.get('host')}}/other/rank_hits/order/hits_day.html\n//NTR::{{source.get('host')}}/tag/NTR.html?tag=NTR&page={{page}}\n//NTR::{{source.get('host')}}/search.html?q=NTR&f=tag&sort=hits_DESC<,&p={{page+1}}>&serialize=\nJSON.stringify(sort)",
    "header": "{\"User-Agent\":\"Mozilla/5.0 (Linux; U; Android 13; zh-Hans-CN; PFJM10 Build/TP1A.220905.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/135.0.4896.58 Mobile Safari/537.36\",\"Accept-Language\":\"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\",\"referer\":\"{{baseUrl}}\"}",
    "jsLib": "var api = 'https://als.vv9v.cn/ALSapi'\nvar ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0'\n\nfunction getApiUrl(path, data, _) {\n  let { source } = _ || this\n  let hostIndex = String(source.get('hostIndex'))\n  if (hostIndex) {\n    data.hostIndex = hostIndex\n  }\n  data = Object.entries(data).map(v => v.join('=')).join('&')\n  let androidId = String(source.get('androidId'))\n  if (!androidId) {\n    androidId = _.java.androidId()\n    source.put('androidId', androidId)\n  }\n  let option = {\n    method: \"GET\", headers: {\n      'x-sec-token': source.getVariable(),\n      'x-android-id': androidId\n    }\n  }\n  let url = api + path + '?' + data + ',' + JSON.stringify(option)\n  return url\n}\n\nvar hosts = [\n  \"https://www.alicesw.com\",\n  \"https://xn--vcsx64d.alicesw2.buzz\",\n  \"https://xn--vcsx64d.alicesw1.sbs\",\n  \"https://xn--vcsx64d.alicesw2.sbs\",\n]\n\nfunction getHost(_) {\n  let { source } = _ || this\n  let host = source.get('host')\n  if (host) {\n    return hosts[host]\n  }\n  return hosts[0]\n}\n",
    "lastUpdateTime": 1757182843986,
    "loginUi": "[\n  {\n    \"name\": \"源作者\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"官方反馈群\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"临时Token口令\",\n    \"type\": \"text\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"查询Token\",\n    \"type\": \"button\",\n    \"action\": \"queryToken()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"获取Token\",\n    \"type\": \"button\",\n    \"action\": \"getToken()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"数据统计\",\n    \"type\": \"button\",\n    \"action\": \"showDb()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.27\n    }\n  },\n  {\n    \"name\": \"                      ⚙️ 共享api接口 ⚙️                      \",\n    \"type\": \"button\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \"默认\",\n    \"type\": \"button\",\n    \"action\": \"changeApi()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \" 0⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeApi(0)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \" 1⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeApi(1)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"                  ⚙️ 爱丽丝接口域名 ⚙️                  \",\n    \"type\": \"button\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"name\": \" 0⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(0)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 1⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(1)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 2⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(2)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"name\": \" 3⃣️ \",\n    \"type\": \"button\",\n    \"action\": \"changeHost(3)\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    'name': '                      ⚙️ 发现页排序 ⚙️                      ',\n    'type': 'button',\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    'name': ' 默认 ',\n    'type': 'button',\n    'action': \"settype('')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    'name': ' 更新 ',\n    'type': 'button',\n    'action': \"settype('更新')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    'name': ' 人气 ',\n    'type': 'button',\n    'action': \"settype('人气')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    'name': ' 字数 ',\n    'type': 'button',\n    'action': \"settype('字数')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  }\n]",
    "loginUrl": "function login() { }\n\nfunction queryToken() {\n  let token = String(source.getVariable())\n  if (token.length <= 60) {\n    java.toast('请输入有效token')\n  } else {\n    let res = java.ajax(getApiUrl('/token/test', { token: token }, this))\n    let data = JSON.parse(res)\n    if (data.code == 0) {\n      let info = data.data\n      java.longToast(`\\n✅查询成功\\n用户：${info.id}${info.max ? `\\n日下载上限：${info.max}` : ''}\\n今日已下载：${info.used}\\n日下载剩余：${info.left}\\n创建时间：${info.createTime}${info.ddl ? `\\n到期时间：${info.ddlTime}` : ''}`)\n    } else {\n      java.longToast('\\n❌查询失败\\n' + data.error)\n    }\n  }\n}\n\nfunction getToken() {\n  let pw1 = String(result['源作者'])\n  if (pw1 == '') {\n    return java.longToast('请输入源作者')\n  }\n  let pw2 = String(result['官方反馈群'])\n  if (pw2 == '') {\n    return java.longToast('请输入官方反馈群')\n  }\n  let pw3 = String(result['临时Token口令'])\n  if (pw3 == '') {\n    return java.longToast('请输入临时Token口令')\n  }\n  let res = java.ajax(getApiUrl('/token/temp', { id: java.androidId(), pw1: pw1, pw2: pw2, pw3: pw3 }, this))\n  let data = JSON.parse(res)\n  if (data.code == 0) {\n    let info = data.data\n    let token = info.token\n    source.setVariable(token)\n    java.longToast(`\\n✅获取临时token成功\\n用户：${info.id}\\n日下载剩余：${info.left}\\n创建时间：${info.createTime}\\n到期时间：${info.ddlTime}`)\n    source.putLoginInfo(JSON.stringify(result))\n  } else {\n    java.longToast('\\n❌获取临时token失败\\n' + data.error)\n  }\n}\n\nfunction settype(type) {\n  let pxo = ''\n  if (type == '更新') {\n    pxo = \"update_time\"\n  } else if (type == '人气') {\n    pxo = \"hits\"\n  } else if (type == '数字') {\n    pxo = \"word\"\n  }\n  source.put('pxo', pxo)\n  java.longToast('发现排序已切换为：' + (type || '默认') + '\\n长按刷新发现页后生效')\n}\n\nfunction showDb() {\n  let res = java.ajax(getApiUrl('/dbinfo', {}, this))\n  let data = JSON.parse(res).data\n  let tip = `\\n【共享数据库信息】\\n书籍数：${data.novel_count}\\n总章节数：${data.chapter_count}\\n总字数：${data.character_count}\\n最近更新时间：${data.last_updated}`\n  java.longToast(tip)\n}\n\nfunction changeHost(index) {\n  if (index < 0 || index >= hosts.length) {\n    throw new Error('Invalid host index')\n  }\n  let host = hosts[index]\n  source.put('host', host)\n  java.longToast('爱丽丝域名切换为：\\n【' + index + '】' + host)\n  try {\n    let date1 = Date.now()\n    let html = java.get(host, { 'user-agent': ua })\n    let code = html.statusCode()\n    let date2 = Date.now()\n    let t = date2 - date1\n    let time = t / 1000 + 's'\n    let logTime = '【' + host + '】\\n┋┋\\n' + '解析时间：' + time\n\n    if (code !== 200 || t > 5000) {\n      java.longToast('【访问失败提示】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♣️源站已失效(可能被墙)♣️\\n┋┋\\n请更新网址/切换源站/切换网络环境\\n┋┋\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t < 1000) {\n      java.longToast('【网络环境优良】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n❤️延迟低，推荐使用此站❤️\\n┋┋\\n网络环境优良，请继续保持状态\\n┋┋\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 1000 && t < 2000) {\n      java.longToast('【网络环境一般】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♦️延迟一般，勉强可使用♦️\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 2000 && t < 5000) {\n      java.longToast('【网络环境堪忧】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♠延迟过高，不建议使用♠\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    }\n  } catch (err) {\n    java.toast('\\n💔访问出错，请换接口💔')\n  }\n}\n\nfunction changeApi(index) {\n  if (!index && index !== 0) {\n    source.put('hostIndex', '')\n    java.longToast('共享api接口已切换为：默认')\n  } else {\n    source.put('hostIndex', index + '')\n    java.longToast('共享api接口已切换为：' + index)\n    try {\n      let result = java.ajax(getApiUrl('/hostping', { hostIndex: index }, this))\n      let data = JSON.parse(result).data\n      java.longToast(`\\n接口状态：${data.isAvailable ? '可用' : '不可用'}\\n延迟：${data.latency}ms\\n质量：${data.rating}`)\n    } catch (err) {\n      java.toast('\\n💔访问出错，请换接口💔')\n    }\n  }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "//p[contains(text(),\"作者：\")]/a[1]/text()||[property=\"og:novel:author\"]@content||book_auth",
      "coverUrl": "//div[@class=\"pic\"]/img[@class=\"lazyload_book_cover fengmian2\"]/@src||book_imgs||.imgbox@img@src",
      "init": "@js:\n//java.log(result)\n//java.log('baseUrl' + baseUrl)\nlet novelId = java.hexDecodeToString(result)\n//java.log('详情novelId：' + novelId)\nlet res = ''\nlet token = source.getVariable()\nif (token) {\n  try {\n    //java.log(`获取${novelId}共享接口详情`)\n    res = java.ajax(getApiUrl('/novelinfo', { novelId: novelId }, this))\njava.log(res)\n    res = JSON.parse(res).data\n    if (Array.isArray(res.book_tags)) {\n      if (res.book_word) res.book_tags.unshift(res.book_word)\n      if (res.book_code) res.book_tags.unshift(res.book_code)\n    }\n    res = JSON.stringify(res)\n  } catch { }\n}\nif (res == '') {\n  try {\n    //res = java.ajax(`${source.get('host')}/novel/${novelId}.html,{\"webview\":true}`)\n    res = java.get(`${source.get('host')}/novel/${novelId}.html`, { 'user-agent': ua }).body()\n    //java.log(res)\n  } catch (e) {\n    //java.log(`获取${novelId}官网详情失败：` + e.message)\n  }\n}\nres",
      "intro": "<br>{{//div[@class=\"intro\"]/text()||$.book_decs||@[property=\"og:description\"]@content}}",
      "kind": "//div[@class=\"box_info\"]//p[contains(text(),\"标签：\")]/a/text()||book_tags",
      "lastChapter": "//div[@class=\"con\"]/p[1]/a/text()||[property~=las?test_chapter_name]@content",
      "name": "[class=\"layui-input\"]@value||book_name||[property=\"og:novel:book_name\"]@content",
      "tocUrl": "//div[@class=\"tit tabtitle\"]/span/em/a/@href||href||text.全部章节@href||\n@js:\n`data:;base64,${java.base64Encode(result.split('/').pop().match(/\\d+/)[0])},{\"type\":\"\"}`",
      "wordCount": "text.字数@text##字数：?:?\\s?"
    },
    "ruleContent": {
      "content": "data.content"
    },
    "ruleExplore": {
      "author": "book_auth",
      "bookList": "//a[@href~='/novel/\\d+\\.html']/@href||data.book_list\n@js:\n//java.log(baseUrl)\nfunction get(rule) {\n  return String(java.getElement(rule)).slice(1, -1).trim()\n}\n\nif (baseUrl.startsWith(api)) {\n  result = Array.from(result)\n} else {\n  result = String(result)\n  //java.log(result)\n  //if (!result) {\n  //   let html = java.ajax(baseUrl)\n  //   java.log('html：' + html)\n  //   java.setContent(html)\n  //   result = String(java.getElement('.txt-list-row5@li||.txt-list-row3@li'))\n  //   java.log('tag：' + result)\n  // }\n  // let isTag = baseUrl.includes('/tag/') || baseUrl.includes('/search.html?q=')\n  // let htmls = result.split('\\n')\n  //java.log('htmls' + htmls)\n  // result = []\n  // for (let html of htmls) {\n  //   //java.log('html' + html)\n  //   if (!html.trim()) continue\n  //   java.setContent(html)\n  //   let book_name = get('//span[@class=\"s2\"]/a/text()')\n  //   //java.log('book_name' + book_name)\n  //   if (book_name == '') continue\n  //   let href = get('//span[@class=\"s2\"]/a/@href')\n  //   let tag = get(isTag ? '//span[@class=\"s1\"]/text()' : '//span[@class=\"fenleibt\"]/text()').slice(1, -1)\n  //   let book_auth = get(isTag ? '//span[@class=\"s4\"]/text()' : '//span[@class=\"s5\"]/text()')\n  //   //java.log('href' + href)\n  //   let novelId = href.match(/\\d+/)[0]\n  //   result.push({\n  //     novelId: novelId,\n  //     book_name: book_name,\n  //     book_auth: book_auth,\n  //     book_tags: tag,\n  //     href: href,\n  //     url: `data:;base64,${java.base64Encode(novelId)},{\"type\":\"\"}`\n  //   })\n  // }\n  let novelIds = result.match(/\\d+/g)\n  let res = java.ajax(getApiUrl('/novelinfos', { novelIds: novelIds }, this))\n  let info = JSON.parse(res).data.book_list\n  result = novelIds.map(id => info[id]).filter(Boolean)\n}\n//java.log(JSON.stringify(result))\nresult = result.map(b => {\n  if (typeof b.book_tags !== 'string') {\n    b.book_tags = Array.from(b.book_tags)\n    if (b.book_word) b.book_tags.unshift(b.book_word)\n    if (b.book_code) b.book_tags.unshift(b.book_code)\n  }\n  b.url = `data:;base64,${java.base64Encode(b.novelId)},{\"type\":\"\"}`\n  return b\n})\nresult",
      "bookUrl": "url",
      "coverUrl": "book_imgs",
      "intro": "book_decs",
      "kind": "book_tags",
      "name": "book_name"
    },
    "ruleSearch": {
      "author": "a.1@text",
      "bookList": ".list-group-item",
      "bookUrl": "a.0@href\n@js:\n`data:;base64,${java.base64Encode(result.replace('/novel/', '').replace('.html', ''))},{\"type\":\"\"}`",
      "coverUrl": "@js:\nif (source.getVariable()) {\n  let novelId = String(result).match(/\\/novel\\/(\\d+)\\.html/)[1]\n  let res = java.ajax(getApiUrl('/novelinfo', { novelId:  novelId }, this))\n  result = JSON.parse(res).data.book_imgs\n} else {\n  let url = `https://www.uaa001.com/api/novel/app/novel/search?category=&excludeTags=&keyword={{book.name}}&orderType=0&page=1&searchType=1&size=40`\n  img = java.ajax(url)\n  result = java.getString(\"$.model.data[0].coverUrl\", img)\n}\nresult",
      "intro": "p.1@text",
      "kind": "small@text&&p.3@text##.*更新时间：|\\[|\\]",
      "name": "a.0@text##^\\d+\\.\\s",
      "wordCount": "p.0@ownText##作者：|\\s字数：|　 .*"
    },
    "ruleToc": {
      "chapterList": "@js:\nlet novelId = java.hexDecodeToString(result)\n//java.log('目录novelId：' + novelId)\nfunction formatChapterLinks(htmlStr) {\n  let aTagRegex = /<a\\s+href=\"([^\"]+)\"[^>]*>([^<]+)<\\/a>/g\n  let result = []\n  let match\n  while ((match = aTagRegex.exec(htmlStr)) !== null) {\n    let href = match[1]\n    let chapName = match[2]\n    let chapId = href.replace(/^\\/book\\//, '').replace(/\\.html$/, '').replace('/', 'U')\n    result.push({\n      href: href,\n      chapName: chapName,\n      chapId: chapId\n    })\n  }\n  return result\n}\n\nlet chaps = []\nlet token = source.getVariable()\nif (token) {\n  //java.log(`获取${novelId}共享接口章节列表`)\n  let result = java.ajax(getApiUrl('/volumelist', { novelId: novelId }, this))\n  chaps = JSON.parse(result).data || []\n}\nif (!chaps.length) {\n  try {\n    // res = java.ajax(`${source.get('host')}/other/chapters/id/${novelId}.html,{\"webview\":true}`)\n    let res = java.get(`${source.get('host')}/other/chapters/id/${novelId}.html`, { 'user-agent': ua }).body()\n    //java.log(res)\n    java.setContent(res)\n    result = java.getElement(\".mulu_list@a||.section-list@a\")\n    //java.log(result)\n  } catch (e) {\n    //java.log(`获取${novelId}官网章节列表失败：` + e.message)\n  }\n  chaps = formatChapterLinks(result)\n}\nlet dirs = []\nif (token) {\n  try {\n    let res = java.ajax(getApiUrl('/dirs', { novelId: novelId }, this))\n    dirs = JSON.parse(res).data || []\n  } catch { }\n}\nlet dirsData = dirs.reduce((acc, d) => {\n  acc[d.chapId] = d\n  return acc\n}, {})\n\nchaps = chaps.map(v => {\n  let chap = dirsData[v.chapId]\n  //java.log('chap' + JSON.stringify(chap))\n  //java.log('v' + JSON.stringify(v))\n  let isShare = !!chap\n  let tag = isShare ? '🍐' : ''\n  return {\n    url: getApiUrl('/chaps', { chapId: v.chapId, novelId: novelId }, this),\n    chapName: tag + (chap ? (chap.chapName || v.chapName || v.name) : (v.chapName || v.name)),\n    vinfo: isShare ? `     ${chap.charCount || 0}字` : '',\n  }\n})\n//java.log(JSON.stringify(chaps))\nchaps",
      "chapterName": "chapName",
      "chapterUrl": "url",
      "updateTime": "vinfo"
    },
    "searchUrl": "{{source.get('host')}}/search.html?q={{key}}&f=_all&sort=relevance&p={{page}}&serialize=",
    "weight": 0
  }
]