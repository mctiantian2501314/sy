[
  {
    "bookSourceComment": "ÊêúÁ¥¢Ê®°Âºè‰∏§ÁßçÁ≤æÂáÜÊêúÁ¥¢ÂíåÊ®°Á≥äÊêúÁ¥¢@ÂàáÊç¢\n‰æãÂ¶ÇÔºö\nÊàëÁöÑ@Ê®°Á≥ä\nÊàëÁöÑ@Á≤æÂáÜ\nÊ≥®ÔºöÈªòËÆ§Ê®°Á≥äÊêúÁ¥¢\nÂÖ≥ÈîÆËØç+@+Ê†áÁ≠æ",
    "bookSourceName": "colamanga",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.colamanga.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "lastUpdateTime": 1750761170456,
    "loginUi": "[\n{\n        name: \"ÂΩìÂâçÂØπÂ∫îÂèòÈáè\",\n        type: \"button\",\n        action: \"get()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n{\n        name: \"ÂàóË°®ÂØπÂ∫îÊâãÂä®ËÆæÁΩÆ\",\n        type: \"button\",\n        action: \"showTagList()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n{\n        name: \"üåüÂàùÂßãÂåñ\",\n        type: \"button\",\n        action: \"v(0)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        name: \"ËÆæÂÆöÊ∞∏‰πÖÊ†áÁ≠æ(ÂàùÂßãÂåñÊÅ¢Â§ç)\",\n        type: \"button\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },{\n        name: \"Ê®°Á≥äÊêúÁ¥¢\",\n        type: \"button\",\n        action: \"v(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }\n    },{\n        name: \"Á≤æÂáÜÊêúÁ¥¢\",\n        type: \"button\",\n        action: \"v(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }\n    }\n    ]",
    "loginUrl": "var tags =  ['Ê®°Á≥äÊêúÁ¥¢', 'Á≤æÂáÜÊêúÁ¥¢'];\nvar y = source.getVariable();\nif (!y || y === \"\") {\n    y = \"\";\n    source.setVariable(y);\n    java.toast(\"\\nÈ¶ñÊ¨°‰ΩøÁî®\\nÂ∑≤ÂàùÂßãÂåñ‰∏∫Á©∫\\n---\\nÈªòËÆ§‰∏∫Ôºö@ËâæÁâπÊ†áÁ≠æÊêúÁ¥¢Ê®°Âºè\");\n}\nvar v = function(value) {\n    var currentValue = source.getVariable();\n    var show = \"\\nËÆæÁΩÆÊàêÂäüÔºÅ\\nÂΩìÂâçÂèòÈáèÔºö\";\n    var tagInfo = \"\";    \n    if (value === 0) {       \n        source.setVariable(\"\");\n        java.toast(\"\\nÂ∑≤ÂàùÂßãÂåñ‰∏∫Á©∫\\n---\\nÈªòËÆ§‰∏∫Ôºö@ËâæÁâπÊ†áÁ≠æÊêúÁ¥¢Ê®°Âºè\");\n    } else if (value >= 1 && value <= tags.length) {\n        var numValue = String(value);\n        source.setVariable(numValue);\n        var tagText = tags[value - 1];\n        tagInfo = \"\\nÂØπÂ∫îÊ†áÁ≠æÔºö\" + tagText;\n        java.longToast(show + numValue + tagInfo);\n    } else {\n        var strValue = String(value);\n        source.setVariable(strValue);\n        java.longToast(show + strValue);\n    }\n};\nvar get = function() {\n    var current = source.getVariable();\n    var show = \"\\nÂΩìÂâçÂèòÈáèÔºö\";\n    var defaultMsg = \"\\nÂΩìÂâç‰∏∫Á©∫ÔºåÈªòËÆ§‰∏∫Ôºö@ËâæÁâπÊ†áÁ≠æÊêúÁ¥¢Ê®°Âºè\";\n    var tagInfo = \"\";\n    if (current && !isNaN(current)) {\n        var num = parseInt(current);\n        if (num >= 1 && num <= tags.length) {\n            tagInfo = \"\\nÂØπÂ∫îÊ†áÁ≠æÔºö\" + tags[num - 1];\n        }\n    }    \n    if (!current || current === \"\") {\n        java.longToast(show + \"Á©∫\" + defaultMsg + tagInfo);\n    } else {\n        java.longToast(show + current + tagInfo);\n    }\n};\nvar showTagList = function() {\n    var list = \"ÂèØÈÄâÊ†áÁ≠æÂàóË°®Ôºö\";\n    for (var i = 0; i < tags.length; i++) {\n        list += \"\\n\" + (i + 1) + \". \" + tags[i];\n    }\n    java.longToast(list);\n};\n",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": ".fed-col-xs12:nth-child(2) > a@text",
      "intro": ".fed-part-both@text",
      "kind": "[property~=category|status|update_time]@content##\\s##,",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "[property$=book_name]@content"
    },
    "ruleContent": {},
    "ruleExplore": {},
    "ruleSearch": {
      "author": "li.-3@textNodes##„Äê|„Äë",
      "bookList": ".fed-part-layout@.fed-deta-info",
      "bookUrl": "h1@a@href",
      "coverUrl": ".fed-list-pics@data-original",
      "intro": "li.-1@text##ÁÆÄ‰ªã",
      "kind": "li@a@text&&li.2:4@textNodes",
      "lastChapter": ".fed-list-remarks@text",
      "name": "h1@a@text"
    },
    "ruleToc": {
      "chapterList": "-.all_data_list@li@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "<js>var variable=source.getVariable()\njava.log(variable)\nif (variable == \"\") {\n  source.setVariable(\"0\")\n  }\nfunction processKey(inputKey) {\n    var modes = ['Ê®°Á≥ä', 'Á≤æÂáÜ'];\n      var pattern = new RegExp('(?:\\\\s+)?@(' + modes.join('|') + ')(?=\\\\s*$)', 'gi');\n    let lastMatch = null;\n    let cleanKey = inputKey;    \n    let match;\n    while ((match = pattern.exec(inputKey)) !== null) {\n        lastMatch = match[1]; \n    }\n    cleanKey = inputKey.replace(pattern, '').trim();\n    var typeIndex = lastMatch \n        ? modes.findIndex(mode => mode.toLowerCase() === lastMatch.toLowerCase()) \n        : 0;\n    return {\n        text: cleanKey,\n        type: typeIndex !== -1 ? typeIndex : 0 \n    };\n}\nvar result = processKey(key);\nvar key=result.text\n\nvar keyxmodev =variable\nif(keyxmodev == 0){\n\tvar keyxmode=result.type;\n\t}else{\n\t\tvar keyxmode = keyxmodev-1\n\t\t}\n\nif(keyxmode == 0){\n\tr=`/search?type=1&searchString=${key}&page=${page}`\n\t}else if(keyxmode == 1) {\n\t\tr=`/search?type=2&searchString=${key}&page=${page}`\n\t\t}\n\t\tr\n\t\t</js>",
    "weight": 0
  }
]